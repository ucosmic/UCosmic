// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static class MVC {
    static readonly ActivitiesClass s_Activities = new ActivitiesClass();
    public static ActivitiesClass Activities { get { return s_Activities; } }
    static readonly CommonClass s_Common = new CommonClass();
    public static CommonClass Common { get { return s_Common; } }
    static readonly EstablishmentsClass s_Establishments = new EstablishmentsClass();
    public static EstablishmentsClass Establishments { get { return s_Establishments; } }
    static readonly IdentityClass s_Identity = new IdentityClass();
    public static IdentityClass Identity { get { return s_Identity; } }
    static readonly InstitutionalAgreementsClass s_InstitutionalAgreements = new InstitutionalAgreementsClass();
    public static InstitutionalAgreementsClass InstitutionalAgreements { get { return s_InstitutionalAgreements; } }
    static readonly LanguagesClass s_Languages = new LanguagesClass();
    public static LanguagesClass Languages { get { return s_Languages; } }
    static readonly PeopleClass s_People = new PeopleClass();
    public static PeopleClass People { get { return s_People; } }
    static readonly PreferencesClass s_Preferences = new PreferencesClass();
    public static PreferencesClass Preferences { get { return s_Preferences; } }
    static readonly RecruitmentAgenciesClass s_RecruitmentAgencies = new RecruitmentAgenciesClass();
    public static RecruitmentAgenciesClass RecruitmentAgencies { get { return s_RecruitmentAgencies; } }
    static readonly RolesClass s_Roles = new RolesClass();
    public static RolesClass Roles { get { return s_Roles; } }
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
}

namespace T4MVC {
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class ActivitiesClass {
        public readonly string Name = "Activities";
        public UCosmic.Www.Mvc.Areas.Activities.Controllers.ActivityFormController ActivityForm = new UCosmic.Www.Mvc.Areas.Activities.Controllers.T4MVC_ActivityFormController();
        public UCosmic.Www.Mvc.Areas.Activities.Controllers.ActivityIndexController ActivityIndex = new UCosmic.Www.Mvc.Areas.Activities.Controllers.T4MVC_ActivityIndexController();
        public UCosmic.Www.Mvc.Areas.Activities.Controllers.ActivityInfoController ActivityInfo = new UCosmic.Www.Mvc.Areas.Activities.Controllers.T4MVC_ActivityInfoController();
        public UCosmic.Www.Mvc.Areas.Activities.Controllers.ActivityListController ActivityList = new UCosmic.Www.Mvc.Areas.Activities.Controllers.T4MVC_ActivityListController();
        public UCosmic.Www.Mvc.Areas.Activities.Controllers.ActivitySearchController ActivitySearch = new UCosmic.Www.Mvc.Areas.Activities.Controllers.T4MVC_ActivitySearchController();
        public UCosmic.Www.Mvc.Areas.Activities.Controllers.TagListController TagList = new UCosmic.Www.Mvc.Areas.Activities.Controllers.T4MVC_TagListController();
        public UCosmic.Www.Mvc.Areas.Activities.Controllers.TagMenuController TagMenu = new UCosmic.Www.Mvc.Areas.Activities.Controllers.T4MVC_TagMenuController();
        public T4MVC.Activities.SharedController Shared = new T4MVC.Activities.SharedController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class CommonClass {
        public readonly string Name = "Common";
        public UCosmic.Www.Mvc.Areas.Common.Controllers.ErrorsController Errors = new UCosmic.Www.Mvc.Areas.Common.Controllers.T4MVC_ErrorsController();
        public UCosmic.Www.Mvc.Areas.Common.Controllers.FeaturesController Features = new UCosmic.Www.Mvc.Areas.Common.Controllers.T4MVC_FeaturesController();
        public UCosmic.Www.Mvc.Areas.Common.Controllers.HealthController Health = new UCosmic.Www.Mvc.Areas.Common.Controllers.T4MVC_HealthController();
        public UCosmic.Www.Mvc.Areas.Common.Controllers.NavigationController Navigation = new UCosmic.Www.Mvc.Areas.Common.Controllers.T4MVC_NavigationController();
        public UCosmic.Www.Mvc.Areas.Common.Controllers.QaController Qa = new UCosmic.Www.Mvc.Areas.Common.Controllers.T4MVC_QaController();
        public UCosmic.Www.Mvc.Areas.Common.Controllers.SkinsController Skins = new UCosmic.Www.Mvc.Areas.Common.Controllers.T4MVC_SkinsController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class EstablishmentsClass {
        public readonly string Name = "Establishments";
        public UCosmic.Www.Mvc.Areas.Establishments.Controllers.ManagementFormsController ManagementForms = new UCosmic.Www.Mvc.Areas.Establishments.Controllers.T4MVC_ManagementFormsController();
        public UCosmic.Www.Mvc.Areas.Establishments.Controllers.SupplementalFormsController SupplementalForms = new UCosmic.Www.Mvc.Areas.Establishments.Controllers.T4MVC_SupplementalFormsController();
        public T4MVC.Establishments.SharedController Shared = new T4MVC.Establishments.SharedController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class IdentityClass {
        public readonly string Name = "Identity";
        public UCosmic.Www.Mvc.Areas.Identity.Controllers.ConfirmEmailController ConfirmEmail = new UCosmic.Www.Mvc.Areas.Identity.Controllers.T4MVC_ConfirmEmailController();
        public UCosmic.Www.Mvc.Areas.Identity.Controllers.CreatePasswordController CreatePassword = new UCosmic.Www.Mvc.Areas.Identity.Controllers.T4MVC_CreatePasswordController();
        public UCosmic.Www.Mvc.Areas.Identity.Controllers.ForgotPasswordController ForgotPassword = new UCosmic.Www.Mvc.Areas.Identity.Controllers.T4MVC_ForgotPasswordController();
        public UCosmic.Www.Mvc.Areas.Identity.Controllers.ListIdentityProvidersController ListIdentityProviders = new UCosmic.Www.Mvc.Areas.Identity.Controllers.T4MVC_ListIdentityProvidersController();
        public UCosmic.Www.Mvc.Areas.Identity.Controllers.MyHomeController MyHome = new UCosmic.Www.Mvc.Areas.Identity.Controllers.T4MVC_MyHomeController();
        public UCosmic.Www.Mvc.Areas.Identity.Controllers.ReceiveSamlAuthnResponseController ReceiveSamlAuthnResponse = new UCosmic.Www.Mvc.Areas.Identity.Controllers.T4MVC_ReceiveSamlAuthnResponseController();
        public UCosmic.Www.Mvc.Areas.Identity.Controllers.ResetPasswordController ResetPassword = new UCosmic.Www.Mvc.Areas.Identity.Controllers.T4MVC_ResetPasswordController();
        public UCosmic.Www.Mvc.Areas.Identity.Controllers.ServiceProviderMetadataController ServiceProviderMetadata = new UCosmic.Www.Mvc.Areas.Identity.Controllers.T4MVC_ServiceProviderMetadataController();
        public UCosmic.Www.Mvc.Areas.Identity.Controllers.SignDownController SignDown = new UCosmic.Www.Mvc.Areas.Identity.Controllers.T4MVC_SignDownController();
        public UCosmic.Www.Mvc.Areas.Identity.Controllers.SignInController SignIn = new UCosmic.Www.Mvc.Areas.Identity.Controllers.T4MVC_SignInController();
        public UCosmic.Www.Mvc.Areas.Identity.Controllers.SignOnController SignOn = new UCosmic.Www.Mvc.Areas.Identity.Controllers.T4MVC_SignOnController();
        public UCosmic.Www.Mvc.Areas.Identity.Controllers.SignOutController SignOut = new UCosmic.Www.Mvc.Areas.Identity.Controllers.T4MVC_SignOutController();
        public UCosmic.Www.Mvc.Areas.Identity.Controllers.SignOverController SignOver = new UCosmic.Www.Mvc.Areas.Identity.Controllers.T4MVC_SignOverController();
        public UCosmic.Www.Mvc.Areas.Identity.Controllers.SignUpController SignUp = new UCosmic.Www.Mvc.Areas.Identity.Controllers.T4MVC_SignUpController();
        public UCosmic.Www.Mvc.Areas.Identity.Controllers.UpdateAffiliationController UpdateAffiliation = new UCosmic.Www.Mvc.Areas.Identity.Controllers.T4MVC_UpdateAffiliationController();
        public UCosmic.Www.Mvc.Areas.Identity.Controllers.UpdateEmailValueController UpdateEmailValue = new UCosmic.Www.Mvc.Areas.Identity.Controllers.T4MVC_UpdateEmailValueController();
        public UCosmic.Www.Mvc.Areas.Identity.Controllers.UpdateNameController UpdateName = new UCosmic.Www.Mvc.Areas.Identity.Controllers.T4MVC_UpdateNameController();
        public UCosmic.Www.Mvc.Areas.Identity.Controllers.UpdatePasswordController UpdatePassword = new UCosmic.Www.Mvc.Areas.Identity.Controllers.T4MVC_UpdatePasswordController();
        public T4MVC.Identity.SharedController Shared = new T4MVC.Identity.SharedController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class InstitutionalAgreementsClass {
        public readonly string Name = "InstitutionalAgreements";
        public UCosmic.Www.Mvc.Areas.InstitutionalAgreements.Controllers.ConfigurationFormsController ConfigurationForms = new UCosmic.Www.Mvc.Areas.InstitutionalAgreements.Controllers.T4MVC_ConfigurationFormsController();
        public UCosmic.Www.Mvc.Areas.InstitutionalAgreements.Controllers.ManagementFormsController ManagementForms = new UCosmic.Www.Mvc.Areas.InstitutionalAgreements.Controllers.T4MVC_ManagementFormsController();
        public UCosmic.Www.Mvc.Areas.InstitutionalAgreements.Controllers.PublicSearchController PublicSearch = new UCosmic.Www.Mvc.Areas.InstitutionalAgreements.Controllers.T4MVC_PublicSearchController();
        public T4MVC.InstitutionalAgreements.SharedController Shared = new T4MVC.InstitutionalAgreements.SharedController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class LanguagesClass {
        public readonly string Name = "Languages";
        public UCosmic.Www.Mvc.Areas.Languages.Controllers.ItemController Item = new UCosmic.Www.Mvc.Areas.Languages.Controllers.T4MVC_ItemController();
        public UCosmic.Www.Mvc.Areas.Languages.Controllers.SearchController Search = new UCosmic.Www.Mvc.Areas.Languages.Controllers.T4MVC_SearchController();
        public T4MVC.Languages.SharedController Shared = new T4MVC.Languages.SharedController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class PeopleClass {
        public readonly string Name = "People";
        public UCosmic.Www.Mvc.Areas.People.Controllers.PersonInfoController PersonInfo = new UCosmic.Www.Mvc.Areas.People.Controllers.T4MVC_PersonInfoController();
        public UCosmic.Www.Mvc.Areas.People.Controllers.PersonNameController PersonName = new UCosmic.Www.Mvc.Areas.People.Controllers.T4MVC_PersonNameController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class PreferencesClass {
        public readonly string Name = "Preferences";
        public UCosmic.Www.Mvc.Areas.Preferences.Controllers.ChangeController Change = new UCosmic.Www.Mvc.Areas.Preferences.Controllers.T4MVC_ChangeController();
        public T4MVC.Preferences.SharedController Shared = new T4MVC.Preferences.SharedController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class RecruitmentAgenciesClass {
        public readonly string Name = "RecruitmentAgencies";
        public UCosmic.Www.Mvc.Areas.RecruitmentAgencies.Controllers.ConfigurationController Configuration = new UCosmic.Www.Mvc.Areas.RecruitmentAgencies.Controllers.T4MVC_ConfigurationController();
        public T4MVC.RecruitmentAgencies.SharedController Shared = new T4MVC.RecruitmentAgencies.SharedController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class RolesClass {
        public readonly string Name = "Roles";
        public UCosmic.Www.Mvc.Areas.Roles.Controllers.RolesController Roles = new UCosmic.Www.Mvc.Areas.Roles.Controllers.T4MVC_RolesController();
    }
}

namespace System.Web.Mvc {
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class T4Extensions {
        public static MvcHtmlString ActionLink(this HtmlHelper htmlHelper, string linkText, ActionResult result) {
            return htmlHelper.ActionLink(linkText, result, null, null, null, null);
        }

        public static MvcHtmlString ActionLink(this HtmlHelper htmlHelper, string linkText, ActionResult result, object htmlAttributes, string protocol = null, string hostName = null, string fragment = null) {
            return htmlHelper.RouteLink(linkText, null, protocol ?? result.GetT4MVCResult().Protocol, hostName, fragment, result.GetRouteValueDictionary(), HtmlHelper.AnonymousObjectToHtmlAttributes(htmlAttributes));
        }

        public static MvcHtmlString ActionLink(this HtmlHelper htmlHelper, string linkText, ActionResult result, IDictionary<string, object> htmlAttributes, string protocol = null, string hostName = null, string fragment = null) {
            return htmlHelper.RouteLink(linkText, null, protocol ?? result.GetT4MVCResult().Protocol, hostName, fragment, result.GetRouteValueDictionary(), htmlAttributes);
        }

        public static MvcForm BeginForm(this HtmlHelper htmlHelper, ActionResult result) {
            return htmlHelper.BeginForm(result, FormMethod.Post);
        }

        public static MvcForm BeginForm(this HtmlHelper htmlHelper, ActionResult result, FormMethod formMethod) {
            return htmlHelper.BeginForm(result, formMethod, null);
        }

        public static MvcForm BeginForm(this HtmlHelper htmlHelper, ActionResult result, FormMethod formMethod, object htmlAttributes) {
            return BeginForm(htmlHelper, result, formMethod, HtmlHelper.AnonymousObjectToHtmlAttributes(htmlAttributes));
        }

        public static MvcForm BeginForm(this HtmlHelper htmlHelper, ActionResult result, FormMethod formMethod, IDictionary<string, object> htmlAttributes) {
            var callInfo = result.GetT4MVCResult();
            return htmlHelper.BeginForm(callInfo.Action, callInfo.Controller, callInfo.RouteValueDictionary, formMethod, htmlAttributes);
        }

        public static void RenderAction(this HtmlHelper htmlHelper, ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            htmlHelper.RenderAction(callInfo.Action, callInfo.Controller, callInfo.RouteValueDictionary);
        }

        public static MvcHtmlString Action(this HtmlHelper htmlHelper, ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return htmlHelper.Action(callInfo.Action, callInfo.Controller, callInfo.RouteValueDictionary);
        }

        public static string Action(this UrlHelper urlHelper, ActionResult result) {
            return urlHelper.Action(result, null, null);
        }

        public static string Action(this UrlHelper urlHelper, ActionResult result, string protocol = null, string hostName = null) {
            return urlHelper.RouteUrl(null, result.GetRouteValueDictionary(), protocol ?? result.GetT4MVCResult().Protocol, hostName);
        }

        public static string ActionAbsolute(this UrlHelper urlHelper, ActionResult result) {
            return string.Format("{0}{1}",urlHelper.RequestContext.HttpContext.Request.Url.GetLeftPart(UriPartial.Authority),
                urlHelper.RouteUrl(result.GetRouteValueDictionary()));
        }

        public static MvcHtmlString ActionLink(this AjaxHelper ajaxHelper, string linkText, ActionResult result, AjaxOptions ajaxOptions) {
            return ajaxHelper.RouteLink(linkText, result.GetRouteValueDictionary(), ajaxOptions);
        }

        public static MvcHtmlString ActionLink(this AjaxHelper ajaxHelper, string linkText, ActionResult result, AjaxOptions ajaxOptions, object htmlAttributes) {
            return ajaxHelper.RouteLink(linkText, result.GetRouteValueDictionary(), ajaxOptions, HtmlHelper.AnonymousObjectToHtmlAttributes(htmlAttributes));
        }

        public static MvcHtmlString ActionLink(this AjaxHelper ajaxHelper, string linkText, ActionResult result, AjaxOptions ajaxOptions, IDictionary<string, object> htmlAttributes) {
            return ajaxHelper.RouteLink(linkText, result.GetRouteValueDictionary(), ajaxOptions, htmlAttributes);
        }

        public static MvcForm BeginForm(this AjaxHelper ajaxHelper, ActionResult result, AjaxOptions ajaxOptions) {
            return ajaxHelper.BeginForm(result, ajaxOptions, null);
        }

        public static MvcForm BeginForm(this AjaxHelper ajaxHelper, ActionResult result, AjaxOptions ajaxOptions, object htmlAttributes) {
            return BeginForm(ajaxHelper, result, ajaxOptions, HtmlHelper.AnonymousObjectToHtmlAttributes(htmlAttributes));
        }

        public static MvcForm BeginForm(this AjaxHelper ajaxHelper, ActionResult result, AjaxOptions ajaxOptions, IDictionary<string, object> htmlAttributes) {
            var callInfo = result.GetT4MVCResult();
            return ajaxHelper.BeginForm(callInfo.Action, callInfo.Controller, callInfo.RouteValueDictionary, ajaxOptions, htmlAttributes);
        }

        public static Route MapRoute(this RouteCollection routes, string name, string url, ActionResult result) {
            return MapRoute(routes, name, url, result, null /*namespaces*/);
        }

        public static Route MapRoute(this RouteCollection routes, string name, string url, ActionResult result, object defaults) {
            return MapRoute(routes, name, url, result, defaults, null /*constraints*/, null /*namespaces*/);
        }

        public static Route MapRoute(this RouteCollection routes, string name, string url, ActionResult result, string[] namespaces) {
            return MapRoute(routes, name, url, result, null /*defaults*/, namespaces);
        }

        public static Route MapRoute(this RouteCollection routes, string name, string url, ActionResult result, object defaults, object constraints) {
            return MapRoute(routes, name, url, result, defaults, constraints, null /*namespaces*/);
        }

        public static Route MapRoute(this RouteCollection routes, string name, string url, ActionResult result, object defaults, string[] namespaces) {
            return MapRoute(routes, name, url, result, defaults, null /*constraints*/, namespaces);
        }

        public static Route MapRoute(this RouteCollection routes, string name, string url, ActionResult result, object defaults, object constraints, string[] namespaces) {
            // Create and add the route
            var route = CreateRoute(url, result, defaults, constraints, namespaces);
            routes.Add(name, route);
            return route;
        }

        // Note: can't name the AreaRegistrationContext methods 'MapRoute', as that conflicts with the existing methods
        public static Route MapRouteArea(this AreaRegistrationContext context, string name, string url, ActionResult result) {
            return MapRouteArea(context, name, url, result, null /*namespaces*/);
        }

        public static Route MapRouteArea(this AreaRegistrationContext context, string name, string url, ActionResult result, object defaults) {
            return MapRouteArea(context, name, url, result, defaults, null /*constraints*/, null /*namespaces*/);
        }

        public static Route MapRouteArea(this AreaRegistrationContext context, string name, string url, ActionResult result, string[] namespaces) {
            return MapRouteArea(context, name, url, result, null /*defaults*/, namespaces);
        }

        public static Route MapRouteArea(this AreaRegistrationContext context, string name, string url, ActionResult result, object defaults, object constraints) {
            return MapRouteArea(context, name, url, result, defaults, constraints, null /*namespaces*/);
        }

        public static Route MapRouteArea(this AreaRegistrationContext context, string name, string url, ActionResult result, object defaults, string[] namespaces) {
            return MapRouteArea(context, name, url, result, defaults, null /*constraints*/, namespaces);
        }

        public static Route MapRouteArea(this AreaRegistrationContext context, string name, string url, ActionResult result, object defaults, object constraints, string[] namespaces) {
            // Create and add the route
            if ((namespaces == null) && (context.Namespaces != null)) {
                 namespaces = context.Namespaces.ToArray();
            }
            var route = CreateRoute(url, result, defaults, constraints, namespaces);
            context.Routes.Add(name, route);
            route.DataTokens["area"] = context.AreaName;
            bool useNamespaceFallback = (namespaces == null) || (namespaces.Length == 0);
            route.DataTokens["UseNamespaceFallback"] = useNamespaceFallback;
            return route;
        }

        private static Route CreateRoute(string url, ActionResult result, object defaults, object constraints, string[] namespaces) {
            // Start by adding the default values from the anonymous object (if any)
            var routeValues = new RouteValueDictionary(defaults);

            // Then add the Controller/Action names and the parameters from the call
            foreach (var pair in result.GetRouteValueDictionary()) {
                routeValues.Add(pair.Key, pair.Value);
            }

            var routeConstraints = new RouteValueDictionary(constraints);

            // Create and add the route
            var route = new Route(url, routeValues, routeConstraints, new MvcRouteHandler());

            route.DataTokens = new RouteValueDictionary();

            if (namespaces != null && namespaces.Length > 0) {
                route.DataTokens["Namespaces"] = namespaces;
            }

            return route;
        }

        public static IT4MVCActionResult GetT4MVCResult(this ActionResult result) {
            var t4MVCResult = result as IT4MVCActionResult;
            if (t4MVCResult == null) {
                throw new InvalidOperationException("T4MVC was called incorrectly. You may need to force it to regenerate by right clicking on T4MVC.tt and choosing Run Custom Tool");
            }
            return t4MVCResult;
        }

        public static RouteValueDictionary GetRouteValueDictionary(this ActionResult result) {
            return result.GetT4MVCResult().RouteValueDictionary;
        }

        public static ActionResult AddRouteValues(this ActionResult result, object routeValues) {
            return result.AddRouteValues(new RouteValueDictionary(routeValues));
        }

        public static ActionResult AddRouteValues(this ActionResult result, RouteValueDictionary routeValues) {
            RouteValueDictionary currentRouteValues = result.GetRouteValueDictionary();

            // Add all the extra values
            foreach (var pair in routeValues) {
                ModelUnbinderHelpers.AddRouteValues(currentRouteValues, pair.Key, pair.Value);
            }

            return result;
        }

        public static ActionResult AddRouteValues(this ActionResult result, System.Collections.Specialized.NameValueCollection nameValueCollection) {
            // Copy all the values from the NameValueCollection into the route dictionary
            nameValueCollection.CopyTo(result.GetRouteValueDictionary());
            return result;
        }

        public static ActionResult AddRouteValue(this ActionResult result, string name, object value) {
            RouteValueDictionary routeValues = result.GetRouteValueDictionary();
            ModelUnbinderHelpers.AddRouteValues(routeValues, name, value);
            return result;
        }

        public static void InitMVCT4Result(this IT4MVCActionResult result, string area, string controller, string action, string protocol = null) {
            result.Controller = controller;
            result.Action = action;
            result.Protocol = T4MVCHelpers.IsProduction() ? protocol : null;
            result.RouteValueDictionary = new RouteValueDictionary();
            result.RouteValueDictionary.Add("Area", area ?? "");
            result.RouteValueDictionary.Add("Controller", controller);
            result.RouteValueDictionary.Add("Action", action);
        }

        public static bool FileExists(string virtualPath) {
            if (!HostingEnvironment.IsHosted) return false;
            string filePath = HostingEnvironment.MapPath(virtualPath);
            return System.IO.File.Exists(filePath);
        }

        static DateTime CenturyBegin=new DateTime(2001,1,1);
        public static string TimestampString(string virtualPath) {
            if (!HostingEnvironment.IsHosted) return string.Empty;
            string filePath = HostingEnvironment.MapPath(virtualPath);
            return Convert.ToString((System.IO.File.GetLastWriteTimeUtc(filePath).Ticks-CenturyBegin.Ticks)/1000000000,16);
        }
    }
}



namespace T4MVC {
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}



[GeneratedCode("T4MVC", "2.0")]
public interface IT4MVCActionResult {
    string Action { get; set; }
    string Controller { get; set; }
    RouteValueDictionary RouteValueDictionary { get; set; }
    string Protocol {get; set; }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public class T4MVC_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult {
    public T4MVC_ActionResult(string area, string controller, string action, string protocol = null): base()  {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
        public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public class T4MVC_JsonResult : System.Web.Mvc.JsonResult, IT4MVCActionResult {
    public T4MVC_JsonResult(string area, string controller, string action, string protocol = null): base()  {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public class T4MVC_ViewResult : System.Web.Mvc.ViewResult, IT4MVCActionResult {
    public T4MVC_ViewResult(string area, string controller, string action, string protocol = null): base()  {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public class T4MVC_RedirectToRouteResult : System.Web.Mvc.RedirectToRouteResult, IT4MVCActionResult {
    public T4MVC_RedirectToRouteResult(string area, string controller, string action, string protocol = null): base(" ", default(System.Web.Routing.RouteValueDictionary), default(bool))  {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public class T4MVC_PartialViewResult : System.Web.Mvc.PartialViewResult, IT4MVCActionResult {
    public T4MVC_PartialViewResult(string area, string controller, string action, string protocol = null): base()  {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public class T4MVC_RedirectResult : System.Web.Mvc.RedirectResult, IT4MVCActionResult {
    public T4MVC_RedirectResult(string area, string controller, string action, string protocol = null): base(" ", default(bool))  {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links {
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class scripts {
        private const string URLPATH = "~/scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class areas {
            private const string URLPATH = "~/scripts/areas";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class common {
                private const string URLPATH = "~/scripts/areas/common";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string releases_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/releases.min.js") ? Url("releases.min.js") : Url("releases.js");
                        }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class identity {
                private const string URLPATH = "~/scripts/areas/identity";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string person_form_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/person-form.min.js") ? Url("person-form.min.js") : Url("person-form.js");
                        }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class institutional_agreements {
                private const string URLPATH = "~/scripts/areas/institutional-agreements";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string configuration_form_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/configuration-form.min.js") ? Url("configuration-form.min.js") : Url("configuration-form.js");
                        public static readonly string public_search_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/public-search.min.js") ? Url("public-search.min.js") : Url("public-search.js");
                        }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class languages {
                private const string URLPATH = "~/scripts/areas/languages";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class roles {
                private const string URLPATH = "~/scripts/areas/roles";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string roles_form_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/roles-form.min.js") ? Url("roles-form.min.js") : Url("roles-form.js");
                        }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class jquery {
            private const string URLPATH = "~/scripts/jquery";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string jquery_1_7_2_vsdoc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-1.7.2-vsdoc.min.js") ? Url("jquery-1.7.2-vsdoc.min.js") : Url("jquery-1.7.2-vsdoc.js");
                    public static readonly string jquery_1_7_2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-1.7.2.min.js") ? Url("jquery-1.7.2.min.js") : Url("jquery-1.7.2.js");
                    public static readonly string jquery_1_7_2_min_js = Url("jquery-1.7.2.min.js");
            public static readonly string jquery_ui_1_8_17_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-ui-1.8.17.min.js") ? Url("jquery-ui-1.8.17.min.js") : Url("jquery-ui-1.8.17.js");
                    public static readonly string jquery_ui_1_8_17_min_js = Url("jquery-ui-1.8.17.min.js");
            public static readonly string jquery_unobtrusive_ajax_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.unobtrusive-ajax.min.js") ? Url("jquery.unobtrusive-ajax.min.js") : Url("jquery.unobtrusive-ajax.js");
                    public static readonly string jquery_unobtrusive_ajax_min_js = Url("jquery.unobtrusive-ajax.min.js");
            public static readonly string jquery_validate_vsdoc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate-vsdoc.min.js") ? Url("jquery.validate-vsdoc.min.js") : Url("jquery.validate-vsdoc.js");
                    public static readonly string jquery_validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.min.js") ? Url("jquery.validate.min.js") : Url("jquery.validate.js");
                    public static readonly string jquery_validate_min_js = Url("jquery.validate.min.js");
            public static readonly string jquery_validate_unobtrusive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.unobtrusive.min.js") ? Url("jquery.validate.unobtrusive.min.js") : Url("jquery.validate.unobtrusive.js");
                    public static readonly string jquery_validate_unobtrusive_min_js = Url("jquery.validate.unobtrusive.min.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class ko {
            private const string URLPATH = "~/scripts/ko";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string knockout_debug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/knockout.debug.min.js") ? Url("knockout.debug.min.js") : Url("knockout.debug.js");
                    public static readonly string knockout_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/knockout.min.js") ? Url("knockout.min.js") : Url("knockout.js");
                    public static readonly string knockout_mapping_latest_debug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/knockout.mapping-latest.debug.min.js") ? Url("knockout.mapping-latest.debug.min.js") : Url("knockout.mapping-latest.debug.js");
                    public static readonly string knockout_mapping_latest_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/knockout.mapping-latest.min.js") ? Url("knockout.mapping-latest.min.js") : Url("knockout.mapping-latest.js");
                    }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class ms {
            private const string URLPATH = "~/scripts/ms";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string MicrosoftAjax_debug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/MicrosoftAjax.debug.min.js") ? Url("MicrosoftAjax.debug.min.js") : Url("MicrosoftAjax.debug.js");
                    public static readonly string MicrosoftAjax_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/MicrosoftAjax.min.js") ? Url("MicrosoftAjax.min.js") : Url("MicrosoftAjax.js");
                    public static readonly string MicrosoftMvcAjax_debug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/MicrosoftMvcAjax.debug.min.js") ? Url("MicrosoftMvcAjax.debug.min.js") : Url("MicrosoftMvcAjax.debug.js");
                    public static readonly string MicrosoftMvcAjax_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/MicrosoftMvcAjax.min.js") ? Url("MicrosoftMvcAjax.min.js") : Url("MicrosoftMvcAjax.js");
                    public static readonly string MicrosoftMvcValidation_debug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/MicrosoftMvcValidation.debug.min.js") ? Url("MicrosoftMvcValidation.debug.min.js") : Url("MicrosoftMvcValidation.debug.js");
                    public static readonly string MicrosoftMvcValidation_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/MicrosoftMvcValidation.min.js") ? Url("MicrosoftMvcValidation.min.js") : Url("MicrosoftMvcValidation.js");
                    }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class other {
            private const string URLPATH = "~/scripts/other";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string jquery_bubblepopup_v2_3_1_min_js = Url("jquery.bubblepopup.v2.3.1.min.js");
            public static readonly string jquery_pjax_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.pjax.min.js") ? Url("jquery.pjax.min.js") : Url("jquery.pjax.js");
                    public static readonly string jquery_pwdMeter_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.pwdMeter.min.js") ? Url("jquery.pwdMeter.min.js") : Url("jquery.pwdMeter.js");
                    public static readonly string jquery_pwdMeter_min_js = Url("jquery.pwdMeter.min.js");
            public static readonly string jquery_simplemodal_1_4_1_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.simplemodal-1.4.1.min.js") ? Url("jquery.simplemodal-1.4.1.min.js") : Url("jquery.simplemodal-1.4.1.js");
                    public static readonly string jquery_simplemodal_1_4_1_min_js = Url("jquery.simplemodal.1.4.1.min.js");
            public static readonly string jquery_tinywatermark_3_1_0_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.tinywatermark-3.1.0.min.js") ? Url("jquery.tinywatermark-3.1.0.min.js") : Url("jquery.tinywatermark-3.1.0.js");
                    public static readonly string jquery_tinywatermark_3_1_0_min_js = Url("jquery.tinywatermark-3.1.0.min.js");
            public static readonly string modernizr_2_5_3_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/modernizr-2.5.3.min.js") ? Url("modernizr-2.5.3.min.js") : Url("modernizr-2.5.3.js");
                    public static readonly string ucosmic_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ucosmic.min.js") ? Url("ucosmic.min.js") : Url("ucosmic.js");
                    }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class T4MvcJs {
            private const string URLPATH = "~/scripts/T4MvcJs";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string T4MVC_source_t4 = Url("T4MVC.source.t4");
            public static readonly string T4MVC_tt_settings_t4 = Url("T4MVC.tt.settings.t4");
            public static readonly string T4MvcJs_tt = Url("T4MvcJs.tt");
            public static readonly string T4MvcJs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/T4MvcJs.min.js") ? Url("T4MvcJs.min.js") : Url("T4MvcJs.js");
                    }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class tinymce {
            private const string URLPATH = "~/scripts/tinymce";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class langs {
                private const string URLPATH = "~/scripts/tinymce/langs";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                        }
        
            public static readonly string license_txt = Url("license.txt");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class plugins {
                private const string URLPATH = "~/scripts/tinymce/plugins";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class advhr {
                    private const string URLPATH = "~/scripts/tinymce/plugins/advhr";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class css {
                        private const string URLPATH = "~/scripts/tinymce/plugins/advhr/css";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string advhr_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/advhr.min.css") ? Url("advhr.min.css") : Url("advhr.css");
                                }
                
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                            public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class js {
                        private const string URLPATH = "~/scripts/tinymce/plugins/advhr/js";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string rule_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/rule.min.js") ? Url("rule.min.js") : Url("rule.js");
                                }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class langs {
                        private const string URLPATH = "~/scripts/tinymce/plugins/advhr/langs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string en_dlg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en_dlg.min.js") ? Url("en_dlg.min.js") : Url("en_dlg.js");
                                }
                
                    public static readonly string rule_htm = Url("rule.htm");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class advimage {
                    private const string URLPATH = "~/scripts/tinymce/plugins/advimage";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class css {
                        private const string URLPATH = "~/scripts/tinymce/plugins/advimage/css";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string advimage_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/advimage.min.css") ? Url("advimage.min.css") : Url("advimage.css");
                                }
                
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                            public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                            public static readonly string image_htm = Url("image.htm");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class img {
                        private const string URLPATH = "~/scripts/tinymce/plugins/advimage/img";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string sample_gif = Url("sample.gif");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class js {
                        private const string URLPATH = "~/scripts/tinymce/plugins/advimage/js";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string image_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/image.min.js") ? Url("image.min.js") : Url("image.js");
                                }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class langs {
                        private const string URLPATH = "~/scripts/tinymce/plugins/advimage/langs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string en_dlg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en_dlg.min.js") ? Url("en_dlg.min.js") : Url("en_dlg.js");
                                }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class advlink {
                    private const string URLPATH = "~/scripts/tinymce/plugins/advlink";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class css {
                        private const string URLPATH = "~/scripts/tinymce/plugins/advlink/css";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string advlink_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/advlink.min.css") ? Url("advlink.min.css") : Url("advlink.css");
                                }
                
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                            public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class js {
                        private const string URLPATH = "~/scripts/tinymce/plugins/advlink/js";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string advlink_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/advlink.min.js") ? Url("advlink.min.js") : Url("advlink.js");
                                }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class langs {
                        private const string URLPATH = "~/scripts/tinymce/plugins/advlink/langs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string en_dlg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en_dlg.min.js") ? Url("en_dlg.min.js") : Url("en_dlg.js");
                                }
                
                    public static readonly string link_htm = Url("link.htm");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class advlist {
                    private const string URLPATH = "~/scripts/tinymce/plugins/advlist";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                            public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                            }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class autolink {
                    private const string URLPATH = "~/scripts/tinymce/plugins/autolink";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                            public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                            }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class autoresize {
                    private const string URLPATH = "~/scripts/tinymce/plugins/autoresize";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                            public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                            }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class autosave {
                    private const string URLPATH = "~/scripts/tinymce/plugins/autosave";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                            public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class langs {
                        private const string URLPATH = "~/scripts/tinymce/plugins/autosave/langs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                                }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class bbcode {
                    private const string URLPATH = "~/scripts/tinymce/plugins/bbcode";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                            public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                            }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class contextmenu {
                    private const string URLPATH = "~/scripts/tinymce/plugins/contextmenu";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                            public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                            }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class directionality {
                    private const string URLPATH = "~/scripts/tinymce/plugins/directionality";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                            public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                            }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class emotions {
                    private const string URLPATH = "~/scripts/tinymce/plugins/emotions";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                            public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                            public static readonly string emotions_htm = Url("emotions.htm");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class img {
                        private const string URLPATH = "~/scripts/tinymce/plugins/emotions/img";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string smiley_cool_gif = Url("smiley-cool.gif");
                        public static readonly string smiley_cry_gif = Url("smiley-cry.gif");
                        public static readonly string smiley_embarassed_gif = Url("smiley-embarassed.gif");
                        public static readonly string smiley_foot_in_mouth_gif = Url("smiley-foot-in-mouth.gif");
                        public static readonly string smiley_frown_gif = Url("smiley-frown.gif");
                        public static readonly string smiley_innocent_gif = Url("smiley-innocent.gif");
                        public static readonly string smiley_kiss_gif = Url("smiley-kiss.gif");
                        public static readonly string smiley_laughing_gif = Url("smiley-laughing.gif");
                        public static readonly string smiley_money_mouth_gif = Url("smiley-money-mouth.gif");
                        public static readonly string smiley_sealed_gif = Url("smiley-sealed.gif");
                        public static readonly string smiley_smile_gif = Url("smiley-smile.gif");
                        public static readonly string smiley_surprised_gif = Url("smiley-surprised.gif");
                        public static readonly string smiley_tongue_out_gif = Url("smiley-tongue-out.gif");
                        public static readonly string smiley_undecided_gif = Url("smiley-undecided.gif");
                        public static readonly string smiley_wink_gif = Url("smiley-wink.gif");
                        public static readonly string smiley_yell_gif = Url("smiley-yell.gif");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class js {
                        private const string URLPATH = "~/scripts/tinymce/plugins/emotions/js";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string emotions_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/emotions.min.js") ? Url("emotions.min.js") : Url("emotions.js");
                                }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class langs {
                        private const string URLPATH = "~/scripts/tinymce/plugins/emotions/langs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string en_dlg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en_dlg.min.js") ? Url("en_dlg.min.js") : Url("en_dlg.js");
                                }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class example {
                    private const string URLPATH = "~/scripts/tinymce/plugins/example";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string dialog_htm = Url("dialog.htm");
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                            public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class img {
                        private const string URLPATH = "~/scripts/tinymce/plugins/example/img";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string example_gif = Url("example.gif");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class js {
                        private const string URLPATH = "~/scripts/tinymce/plugins/example/js";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string dialog_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.js") ? Url("dialog.min.js") : Url("dialog.js");
                                }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class langs {
                        private const string URLPATH = "~/scripts/tinymce/plugins/example/langs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                                public static readonly string en_dlg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en_dlg.min.js") ? Url("en_dlg.min.js") : Url("en_dlg.js");
                                }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class example_dependency {
                    private const string URLPATH = "~/scripts/tinymce/plugins/example_dependency";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                            public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                            }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class fullpage {
                    private const string URLPATH = "~/scripts/tinymce/plugins/fullpage";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class css {
                        private const string URLPATH = "~/scripts/tinymce/plugins/fullpage/css";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string fullpage_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fullpage.min.css") ? Url("fullpage.min.css") : Url("fullpage.css");
                                }
                
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                            public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                            public static readonly string fullpage_htm = Url("fullpage.htm");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class js {
                        private const string URLPATH = "~/scripts/tinymce/plugins/fullpage/js";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string fullpage_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fullpage.min.js") ? Url("fullpage.min.js") : Url("fullpage.js");
                                }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class langs {
                        private const string URLPATH = "~/scripts/tinymce/plugins/fullpage/langs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string en_dlg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en_dlg.min.js") ? Url("en_dlg.min.js") : Url("en_dlg.js");
                                }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class fullscreen {
                    private const string URLPATH = "~/scripts/tinymce/plugins/fullscreen";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                            public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                            public static readonly string fullscreen_htm = Url("fullscreen.htm");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class iespell {
                    private const string URLPATH = "~/scripts/tinymce/plugins/iespell";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                            public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                            }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class inlinepopups {
                    private const string URLPATH = "~/scripts/tinymce/plugins/inlinepopups";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                            public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class skins {
                        private const string URLPATH = "~/scripts/tinymce/plugins/inlinepopups/skins";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class clearlooks2 {
                            private const string URLPATH = "~/scripts/tinymce/plugins/inlinepopups/skins/clearlooks2";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class img {
                                private const string URLPATH = "~/scripts/tinymce/plugins/inlinepopups/skins/clearlooks2/img";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string alert_gif = Url("alert.gif");
                                public static readonly string button_gif = Url("button.gif");
                                public static readonly string buttons_gif = Url("buttons.gif");
                                public static readonly string confirm_gif = Url("confirm.gif");
                                public static readonly string corners_gif = Url("corners.gif");
                                public static readonly string horizontal_gif = Url("horizontal.gif");
                                public static readonly string vertical_gif = Url("vertical.gif");
                            }
                        
                            public static readonly string window_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/window.min.css") ? Url("window.min.css") : Url("window.css");
                                    }
                    
                    }
                
                    public static readonly string template_htm = Url("template.htm");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class insertdatetime {
                    private const string URLPATH = "~/scripts/tinymce/plugins/insertdatetime";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                            public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                            }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class layer {
                    private const string URLPATH = "~/scripts/tinymce/plugins/layer";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                            public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                            }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class legacyoutput {
                    private const string URLPATH = "~/scripts/tinymce/plugins/legacyoutput";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                            public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                            }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class lists {
                    private const string URLPATH = "~/scripts/tinymce/plugins/lists";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                            public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                            }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class media {
                    private const string URLPATH = "~/scripts/tinymce/plugins/media";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class css {
                        private const string URLPATH = "~/scripts/tinymce/plugins/media/css";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string media_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/media.min.css") ? Url("media.min.css") : Url("media.css");
                                }
                
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                            public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class js {
                        private const string URLPATH = "~/scripts/tinymce/plugins/media/js";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string embed_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/embed.min.js") ? Url("embed.min.js") : Url("embed.js");
                                public static readonly string media_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/media.min.js") ? Url("media.min.js") : Url("media.js");
                                }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class langs {
                        private const string URLPATH = "~/scripts/tinymce/plugins/media/langs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string en_dlg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en_dlg.min.js") ? Url("en_dlg.min.js") : Url("en_dlg.js");
                                }
                
                    public static readonly string media_htm = Url("media.htm");
                    public static readonly string moxieplayer_swf = Url("moxieplayer.swf");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class nonbreaking {
                    private const string URLPATH = "~/scripts/tinymce/plugins/nonbreaking";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                            public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                            }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class noneditable {
                    private const string URLPATH = "~/scripts/tinymce/plugins/noneditable";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                            public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                            }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class pagebreak {
                    private const string URLPATH = "~/scripts/tinymce/plugins/pagebreak";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                            public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                            }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class paste {
                    private const string URLPATH = "~/scripts/tinymce/plugins/paste";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                            public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class js {
                        private const string URLPATH = "~/scripts/tinymce/plugins/paste/js";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string pastetext_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pastetext.min.js") ? Url("pastetext.min.js") : Url("pastetext.js");
                                public static readonly string pasteword_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pasteword.min.js") ? Url("pasteword.min.js") : Url("pasteword.js");
                                }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class langs {
                        private const string URLPATH = "~/scripts/tinymce/plugins/paste/langs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string en_dlg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en_dlg.min.js") ? Url("en_dlg.min.js") : Url("en_dlg.js");
                                }
                
                    public static readonly string pastetext_htm = Url("pastetext.htm");
                    public static readonly string pasteword_htm = Url("pasteword.htm");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class preview {
                    private const string URLPATH = "~/scripts/tinymce/plugins/preview";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                            public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                            public static readonly string example_html = Url("example.html");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class jscripts {
                        private const string URLPATH = "~/scripts/tinymce/plugins/preview/jscripts";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string embed_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/embed.min.js") ? Url("embed.min.js") : Url("embed.js");
                                }
                
                    public static readonly string preview_html = Url("preview.html");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class print {
                    private const string URLPATH = "~/scripts/tinymce/plugins/print";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                            public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                            }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class save {
                    private const string URLPATH = "~/scripts/tinymce/plugins/save";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                            public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                            }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class searchreplace {
                    private const string URLPATH = "~/scripts/tinymce/plugins/searchreplace";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class css {
                        private const string URLPATH = "~/scripts/tinymce/plugins/searchreplace/css";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string searchreplace_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/searchreplace.min.css") ? Url("searchreplace.min.css") : Url("searchreplace.css");
                                }
                
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                            public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class js {
                        private const string URLPATH = "~/scripts/tinymce/plugins/searchreplace/js";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string searchreplace_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/searchreplace.min.js") ? Url("searchreplace.min.js") : Url("searchreplace.js");
                                }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class langs {
                        private const string URLPATH = "~/scripts/tinymce/plugins/searchreplace/langs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string en_dlg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en_dlg.min.js") ? Url("en_dlg.min.js") : Url("en_dlg.js");
                                }
                
                    public static readonly string searchreplace_htm = Url("searchreplace.htm");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class spellchecker {
                    private const string URLPATH = "~/scripts/tinymce/plugins/spellchecker";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class css {
                        private const string URLPATH = "~/scripts/tinymce/plugins/spellchecker/css";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string content_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/content.min.css") ? Url("content.min.css") : Url("content.css");
                                }
                
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                            public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class img {
                        private const string URLPATH = "~/scripts/tinymce/plugins/spellchecker/img";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string wline_gif = Url("wline.gif");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class style {
                    private const string URLPATH = "~/scripts/tinymce/plugins/style";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class css {
                        private const string URLPATH = "~/scripts/tinymce/plugins/style/css";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string props_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/props.min.css") ? Url("props.min.css") : Url("props.css");
                                }
                
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                            public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class js {
                        private const string URLPATH = "~/scripts/tinymce/plugins/style/js";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string props_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/props.min.js") ? Url("props.min.js") : Url("props.js");
                                }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class langs {
                        private const string URLPATH = "~/scripts/tinymce/plugins/style/langs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string en_dlg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en_dlg.min.js") ? Url("en_dlg.min.js") : Url("en_dlg.js");
                                }
                
                    public static readonly string props_htm = Url("props.htm");
                    public static readonly string readme_txt = Url("readme.txt");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class tabfocus {
                    private const string URLPATH = "~/scripts/tinymce/plugins/tabfocus";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                            public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                            }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class table {
                    private const string URLPATH = "~/scripts/tinymce/plugins/table";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string cell_htm = Url("cell.htm");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class css {
                        private const string URLPATH = "~/scripts/tinymce/plugins/table/css";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string cell_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cell.min.css") ? Url("cell.min.css") : Url("cell.css");
                                public static readonly string row_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/row.min.css") ? Url("row.min.css") : Url("row.css");
                                public static readonly string table_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/table.min.css") ? Url("table.min.css") : Url("table.css");
                                }
                
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                            public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class js {
                        private const string URLPATH = "~/scripts/tinymce/plugins/table/js";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string cell_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cell.min.js") ? Url("cell.min.js") : Url("cell.js");
                                public static readonly string merge_cells_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/merge_cells.min.js") ? Url("merge_cells.min.js") : Url("merge_cells.js");
                                public static readonly string row_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/row.min.js") ? Url("row.min.js") : Url("row.js");
                                public static readonly string table_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/table.min.js") ? Url("table.min.js") : Url("table.js");
                                }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class langs {
                        private const string URLPATH = "~/scripts/tinymce/plugins/table/langs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string en_dlg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en_dlg.min.js") ? Url("en_dlg.min.js") : Url("en_dlg.js");
                                }
                
                    public static readonly string merge_cells_htm = Url("merge_cells.htm");
                    public static readonly string row_htm = Url("row.htm");
                    public static readonly string table_htm = Url("table.htm");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class template {
                    private const string URLPATH = "~/scripts/tinymce/plugins/template";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string blank_htm = Url("blank.htm");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class css {
                        private const string URLPATH = "~/scripts/tinymce/plugins/template/css";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string template_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/template.min.css") ? Url("template.min.css") : Url("template.css");
                                }
                
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                            public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class js {
                        private const string URLPATH = "~/scripts/tinymce/plugins/template/js";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string template_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/template.min.js") ? Url("template.min.js") : Url("template.js");
                                }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class langs {
                        private const string URLPATH = "~/scripts/tinymce/plugins/template/langs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string en_dlg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en_dlg.min.js") ? Url("en_dlg.min.js") : Url("en_dlg.js");
                                }
                
                    public static readonly string template_htm = Url("template.htm");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class visualblocks {
                    private const string URLPATH = "~/scripts/tinymce/plugins/visualblocks";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class css {
                        private const string URLPATH = "~/scripts/tinymce/plugins/visualblocks/css";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string visualblocks_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/visualblocks.min.css") ? Url("visualblocks.min.css") : Url("visualblocks.css");
                                }
                
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                            public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                            }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class visualchars {
                    private const string URLPATH = "~/scripts/tinymce/plugins/visualchars";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                            public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                            }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class wordcount {
                    private const string URLPATH = "~/scripts/tinymce/plugins/wordcount";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                            public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                            }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class xhtmlxtras {
                    private const string URLPATH = "~/scripts/tinymce/plugins/xhtmlxtras";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string abbr_htm = Url("abbr.htm");
                    public static readonly string acronym_htm = Url("acronym.htm");
                    public static readonly string attributes_htm = Url("attributes.htm");
                    public static readonly string cite_htm = Url("cite.htm");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class css {
                        private const string URLPATH = "~/scripts/tinymce/plugins/xhtmlxtras/css";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string attributes_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/attributes.min.css") ? Url("attributes.min.css") : Url("attributes.css");
                                public static readonly string popup_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/popup.min.css") ? Url("popup.min.css") : Url("popup.css");
                                }
                
                    public static readonly string del_htm = Url("del.htm");
                    public static readonly string editor_plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin.min.js") ? Url("editor_plugin.min.js") : Url("editor_plugin.js");
                            public static readonly string editor_plugin_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_plugin_src.min.js") ? Url("editor_plugin_src.min.js") : Url("editor_plugin_src.js");
                            public static readonly string ins_htm = Url("ins.htm");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class js {
                        private const string URLPATH = "~/scripts/tinymce/plugins/xhtmlxtras/js";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string abbr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/abbr.min.js") ? Url("abbr.min.js") : Url("abbr.js");
                                public static readonly string acronym_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/acronym.min.js") ? Url("acronym.min.js") : Url("acronym.js");
                                public static readonly string attributes_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/attributes.min.js") ? Url("attributes.min.js") : Url("attributes.js");
                                public static readonly string cite_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cite.min.js") ? Url("cite.min.js") : Url("cite.js");
                                public static readonly string del_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/del.min.js") ? Url("del.min.js") : Url("del.js");
                                public static readonly string element_common_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/element_common.min.js") ? Url("element_common.min.js") : Url("element_common.js");
                                public static readonly string ins_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ins.min.js") ? Url("ins.min.js") : Url("ins.js");
                                }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class langs {
                        private const string URLPATH = "~/scripts/tinymce/plugins/xhtmlxtras/langs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string en_dlg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en_dlg.min.js") ? Url("en_dlg.min.js") : Url("en_dlg.js");
                                }
                
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class themes {
                private const string URLPATH = "~/scripts/tinymce/themes";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class advanced {
                    private const string URLPATH = "~/scripts/tinymce/themes/advanced";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string about_htm = Url("about.htm");
                    public static readonly string anchor_htm = Url("anchor.htm");
                    public static readonly string charmap_htm = Url("charmap.htm");
                    public static readonly string color_picker_htm = Url("color_picker.htm");
                    public static readonly string editor_template_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_template.min.js") ? Url("editor_template.min.js") : Url("editor_template.js");
                            public static readonly string editor_template_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_template_src.min.js") ? Url("editor_template_src.min.js") : Url("editor_template_src.js");
                            public static readonly string image_htm = Url("image.htm");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class img {
                        private const string URLPATH = "~/scripts/tinymce/themes/advanced/img";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string colorpicker_jpg = Url("colorpicker.jpg");
                        public static readonly string flash_gif = Url("flash.gif");
                        public static readonly string icons_gif = Url("icons.gif");
                        public static readonly string iframe_gif = Url("iframe.gif");
                        public static readonly string pagebreak_gif = Url("pagebreak.gif");
                        public static readonly string quicktime_gif = Url("quicktime.gif");
                        public static readonly string realmedia_gif = Url("realmedia.gif");
                        public static readonly string shockwave_gif = Url("shockwave.gif");
                        public static readonly string trans_gif = Url("trans.gif");
                        public static readonly string video_gif = Url("video.gif");
                        public static readonly string windowsmedia_gif = Url("windowsmedia.gif");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class js {
                        private const string URLPATH = "~/scripts/tinymce/themes/advanced/js";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string about_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/about.min.js") ? Url("about.min.js") : Url("about.js");
                                public static readonly string anchor_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/anchor.min.js") ? Url("anchor.min.js") : Url("anchor.js");
                                public static readonly string charmap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/charmap.min.js") ? Url("charmap.min.js") : Url("charmap.js");
                                public static readonly string color_picker_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/color_picker.min.js") ? Url("color_picker.min.js") : Url("color_picker.js");
                                public static readonly string image_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/image.min.js") ? Url("image.min.js") : Url("image.js");
                                public static readonly string link_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/link.min.js") ? Url("link.min.js") : Url("link.js");
                                public static readonly string source_editor_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/source_editor.min.js") ? Url("source_editor.min.js") : Url("source_editor.js");
                                }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class langs {
                        private const string URLPATH = "~/scripts/tinymce/themes/advanced/langs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                                public static readonly string en_dlg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en_dlg.min.js") ? Url("en_dlg.min.js") : Url("en_dlg.js");
                                }
                
                    public static readonly string link_htm = Url("link.htm");
                    public static readonly string shortcuts_htm = Url("shortcuts.htm");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class skins {
                        private const string URLPATH = "~/scripts/tinymce/themes/advanced/skins";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class @default {
                            private const string URLPATH = "~/scripts/tinymce/themes/advanced/skins/default";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string content_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/content.min.css") ? Url("content.min.css") : Url("content.css");
                                    public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.css") ? Url("dialog.min.css") : Url("dialog.css");
                                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class img {
                                private const string URLPATH = "~/scripts/tinymce/themes/advanced/skins/default/img";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string buttons_png = Url("buttons.png");
                                public static readonly string items_gif = Url("items.gif");
                                public static readonly string menu_arrow_gif = Url("menu_arrow.gif");
                                public static readonly string menu_check_gif = Url("menu_check.gif");
                                public static readonly string progress_gif = Url("progress.gif");
                                public static readonly string tabs_gif = Url("tabs.gif");
                            }
                        
                            public static readonly string ui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ui.min.css") ? Url("ui.min.css") : Url("ui.css");
                                    }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class highcontrast {
                            private const string URLPATH = "~/scripts/tinymce/themes/advanced/skins/highcontrast";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string content_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/content.min.css") ? Url("content.min.css") : Url("content.css");
                                    public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.css") ? Url("dialog.min.css") : Url("dialog.css");
                                    public static readonly string ui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ui.min.css") ? Url("ui.min.css") : Url("ui.css");
                                    }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class o2k7 {
                            private const string URLPATH = "~/scripts/tinymce/themes/advanced/skins/o2k7";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string content_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/content.min.css") ? Url("content.min.css") : Url("content.css");
                                    public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.css") ? Url("dialog.min.css") : Url("dialog.css");
                                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class img {
                                private const string URLPATH = "~/scripts/tinymce/themes/advanced/skins/o2k7/img";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string button_bg_png = Url("button_bg.png");
                                public static readonly string button_bg_black_png = Url("button_bg_black.png");
                                public static readonly string button_bg_silver_png = Url("button_bg_silver.png");
                            }
                        
                            public static readonly string ui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ui.min.css") ? Url("ui.min.css") : Url("ui.css");
                                    public static readonly string ui_black_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ui_black.min.css") ? Url("ui_black.min.css") : Url("ui_black.css");
                                    public static readonly string ui_silver_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ui_silver.min.css") ? Url("ui_silver.min.css") : Url("ui_silver.css");
                                    }
                    
                    }
                
                    public static readonly string source_editor_htm = Url("source_editor.htm");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class simple {
                    private const string URLPATH = "~/scripts/tinymce/themes/simple";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string editor_template_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_template.min.js") ? Url("editor_template.min.js") : Url("editor_template.js");
                            public static readonly string editor_template_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor_template_src.min.js") ? Url("editor_template_src.min.js") : Url("editor_template_src.js");
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class img {
                        private const string URLPATH = "~/scripts/tinymce/themes/simple/img";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string icons_gif = Url("icons.gif");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class langs {
                        private const string URLPATH = "~/scripts/tinymce/themes/simple/langs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                                }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class skins {
                        private const string URLPATH = "~/scripts/tinymce/themes/simple/skins";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class @default {
                            private const string URLPATH = "~/scripts/tinymce/themes/simple/skins/default";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string content_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/content.min.css") ? Url("content.min.css") : Url("content.css");
                                    public static readonly string ui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ui.min.css") ? Url("ui.min.css") : Url("ui.css");
                                    }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class o2k7 {
                            private const string URLPATH = "~/scripts/tinymce/themes/simple/skins/o2k7";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string content_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/content.min.css") ? Url("content.min.css") : Url("content.css");
                                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class img {
                                private const string URLPATH = "~/scripts/tinymce/themes/simple/skins/o2k7/img";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string button_bg_png = Url("button_bg.png");
                            }
                        
                            public static readonly string ui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ui.min.css") ? Url("ui.min.css") : Url("ui.css");
                                    }
                    
                    }
                
                }
            
            }
        
            public static readonly string tiny_mce_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tiny_mce.min.js") ? Url("tiny_mce.min.js") : Url("tiny_mce.js");
                    public static readonly string tiny_mce_popup_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tiny_mce_popup.min.js") ? Url("tiny_mce_popup.min.js") : Url("tiny_mce_popup.js");
                    public static readonly string tiny_mce_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tiny_mce_src.min.js") ? Url("tiny_mce_src.min.js") : Url("tiny_mce_src.js");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class utils {
                private const string URLPATH = "~/scripts/tinymce/utils";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string editable_selects_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editable_selects.min.js") ? Url("editable_selects.min.js") : Url("editable_selects.js");
                        public static readonly string form_utils_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/form_utils.min.js") ? Url("form_utils.min.js") : Url("form_utils.js");
                        public static readonly string mctabs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/mctabs.min.js") ? Url("mctabs.min.js") : Url("mctabs.js");
                        public static readonly string validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/validate.min.js") ? Url("validate.min.js") : Url("validate.js");
                        }
        
        }
    
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class content {
        private const string URLPATH = "~/content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class docs {
            private const string URLPATH = "~/content/docs";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string travel_module_overview_2007_pdf = Url("travel-module-overview-2007.pdf");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class icons {
            private const string URLPATH = "~/content/icons";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class animated_globe {
                private const string URLPATH = "~/content/icons/animated_globe";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string animated_globe_slow_48_gif = Url("animated-globe-slow-48.gif");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class cancels {
                private const string URLPATH = "~/content/icons/cancels";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string cancel_disabled_hover_16_png = Url("cancel-disabled-hover-16.png");
                public static readonly string cancel_disabled_hover_24_png = Url("cancel-disabled-hover-24.png");
                public static readonly string cancel_disabled_opaque_16_png = Url("cancel-disabled-opaque-16.png");
                public static readonly string cancel_disabled_opaque_24_png = Url("cancel-disabled-opaque-24.png");
                public static readonly string cancel_hot_12_png = Url("cancel-hot-12.png");
                public static readonly string cancel_hot_16_png = Url("cancel-hot-16.png");
                public static readonly string cancel_hot_24_png = Url("cancel-hot-24.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class checkmarks {
                private const string URLPATH = "~/content/icons/checkmarks";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string checkmark_green_16_png = Url("checkmark-green-16.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class deletes {
                private const string URLPATH = "~/content/icons/deletes";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string delete_hot_12_png = Url("delete-hot-12.png");
                public static readonly string delete_hot_16_png = Url("delete-hot-16.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class files {
                private const string URLPATH = "~/content/icons/files";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string ms_excel_16_png = Url("ms-excel-16.png");
                public static readonly string ms_pwoerpoint_16_png = Url("ms-pwoerpoint-16.png");
                public static readonly string ms_word_16_png = Url("ms-word-16.png");
                public static readonly string openoffice_spreadsheet_16_png = Url("openoffice-spreadsheet-16.png");
                public static readonly string openoffice_type_16_png = Url("openoffice-type-16.png");
                public static readonly string pdf_16_png = Url("pdf-16.png");
                public static readonly string unknown_16_png = Url("unknown-16.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class keys {
                private const string URLPATH = "~/content/icons/keys";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string key_vertical_16_png = Url("key-vertical-16.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class loaders {
                private const string URLPATH = "~/content/icons/loaders";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string win7_wait_16_gif = Url("win7-wait-16.gif");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class maps {
                private const string URLPATH = "~/content/icons/maps";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string drag_cross_67_16_png = Url("drag_cross_67_16.png");
                public static readonly string drop_marker_hot_31_png = Url("drop-marker-hot-31.png");
                public static readonly string drop_marker_norm_31_png = Url("drop-marker-norm-31.png");
                public static readonly string marker_sprite_png = Url("marker_sprite.png");
                public static readonly string new_raised_marker_png = Url("new-raised-marker.png");
            }
        
            public static readonly string transparent_png = Url("transparent.png");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class users {
                private const string URLPATH = "~/content/icons/users";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string user_black_16_png = Url("user-black-16.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class warning {
                private const string URLPATH = "~/content/icons/warning";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string warning_16_png = Url("warning-16.png");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class images {
            private const string URLPATH = "~/content/images";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string agreements_private_info_250_jpg = Url("agreements-private-info-250.jpg");
            public static readonly string agreements_private_info_900_jpg = Url("agreements-private-info-900.jpg");
            public static readonly string agreements_private_search_250_jpg = Url("agreements-private-search-250.jpg");
            public static readonly string agreements_private_search_900_jpg = Url("agreements-private-search-900.jpg");
            public static readonly string agreements_protected_info_250_jpg = Url("agreements-protected-info-250.jpg");
            public static readonly string agreements_protected_info_900_jpg = Url("agreements-protected-info-900.jpg");
            public static readonly string agreements_protected_search_250_jpg = Url("agreements-protected-search-250.jpg");
            public static readonly string agreements_protected_search_900_jpg = Url("agreements-protected-search-900.jpg");
            public static readonly string agreements_public_info_250_jpg = Url("agreements-public-info-250.jpg");
            public static readonly string agreements_public_info_900_jpg = Url("agreements-public-info-900.jpg");
            public static readonly string agreements_public_search_250_jpg = Url("agreements-public-search-250.jpg");
            public static readonly string agreements_public_search_900_jpg = Url("agreements-public-search-900.jpg");
            public static readonly string agreements_visibility_900_png = Url("agreements-visibility-900.png");
            public static readonly string facac_modal_1_png = Url("facac-modal-1.png");
            public static readonly string index_card_png = Url("index-card.png");
            public static readonly string ipad_photo_jpg = Url("ipad-photo.jpg");
            public static readonly string map_screenshot_2011_12_b_gif = Url("map-screenshot-2011-12-b.gif");
        }
    
        public static readonly string jquery_bubblepopup_v2_3_1_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.bubblepopup.v2.3.1.min.css") ? Url("jquery.bubblepopup.v2.3.1.min.css") : Url("jquery.bubblepopup.v2.3.1.css");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class kml {
            private const string URLPATH = "~/content/kml";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string establishment_import_kml = Url("establishment-import.kml");
            public static readonly string establishment_import_tsv = Url("establishment-import.tsv");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class mail {
            private const string URLPATH = "~/content/mail";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        }
    
        public static readonly string ReSharper_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ReSharper.min.css") ? Url("ReSharper.min.css") : Url("ReSharper.css");
                public static readonly string Site_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Site.min.css") ? Url("Site.min.css") : Url("Site.css");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class skins {
            private const string URLPATH = "~/content/skins";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class @default {
                private const string URLPATH = "~/content/skins/default";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string button_gradient_active_gif = Url("button-gradient-active.gif");
                public static readonly string button_gradient_hover_gif = Url("button-gradient-hover.gif");
                public static readonly string button_gradient_gif = Url("button-gradient.gif");
                public static readonly string drop_arrow_button_sized_png = Url("drop-arrow-button-sized.png");
                public static readonly string drop_arrow_png = Url("drop-arrow.png");
                public static readonly string head_logo_png = Url("head-logo.png");
                public static readonly string head_row_shadow_png = Url("head-row-shadow.png");
            }
        
            public static readonly string map_panes_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/map-panes.min.css") ? Url("map-panes.min.css") : Url("map-panes.css");
                    public static readonly string screen_ie8_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/screen-ie8.min.css") ? Url("screen-ie8.min.css") : Url("screen-ie8.css");
                    public static readonly string screen_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/screen.min.css") ? Url("screen.min.css") : Url("screen.css");
                    public static readonly string tiny_mce_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tiny-mce.min.css") ? Url("tiny-mce.min.css") : Url("tiny-mce.css");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class www_lehigh_edu {
                private const string URLPATH = "~/content/skins/www.lehigh.edu";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string head_logo_png = Url("head-logo.png");
                public static readonly string map_panes_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/map-panes.min.css") ? Url("map-panes.min.css") : Url("map-panes.css");
                        public static readonly string screen_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/screen.min.css") ? Url("screen.min.css") : Url("screen.css");
                        }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class www_suny_edu {
                private const string URLPATH = "~/content/skins/www.suny.edu";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string head_logo_png = Url("head-logo.png");
                public static readonly string map_panes_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/map-panes.min.css") ? Url("map-panes.min.css") : Url("map-panes.css");
                        public static readonly string screen_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/screen.min.css") ? Url("screen.min.css") : Url("screen.css");
                        }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class www_uc_edu {
                private const string URLPATH = "~/content/skins/www.uc.edu";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string head_h1_ingot_png = Url("head-h1-ingot.png");
                public static readonly string head_logo_png = Url("head-logo.png");
                public static readonly string head_row_bg_png = Url("head-row-bg.png");
                public static readonly string map_panes_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/map-panes.min.css") ? Url("map-panes.min.css") : Url("map-panes.css");
                        public static readonly string screen_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/screen.min.css") ? Url("screen.min.css") : Url("screen.css");
                        }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class www_umn_edu {
                private const string URLPATH = "~/content/skins/www.umn.edu";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string head_logo_png = Url("head-logo.png");
                public static readonly string map_panes_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/map-panes.min.css") ? Url("map-panes.min.css") : Url("map-panes.css");
                        public static readonly string screen_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/screen.min.css") ? Url("screen.min.css") : Url("screen.css");
                        }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class www_usf_edu {
                private const string URLPATH = "~/content/skins/www.usf.edu";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string head_logo_png = Url("head-logo.png");
                public static readonly string map_panes_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/map-panes.min.css") ? Url("map-panes.min.css") : Url("map-panes.css");
                        public static readonly string screen_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/screen.min.css") ? Url("screen.min.css") : Url("screen.css");
                        }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class themes {
            private const string URLPATH = "~/content/themes";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class api {
                private const string URLPATH = "~/content/themes/api";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class consortium {
                    private const string URLPATH = "~/content/themes/api/consortium";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class @base {
                private const string URLPATH = "~/content/themes/base";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class images {
                    private const string URLPATH = "~/content/themes/base/images";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string ui_bg_flat_0_aaaaaa_40x100_png = Url("ui-bg_flat_0_aaaaaa_40x100.png");
                    public static readonly string ui_bg_flat_75_ffffff_40x100_png = Url("ui-bg_flat_75_ffffff_40x100.png");
                    public static readonly string ui_bg_glass_55_fbf9ee_1x400_png = Url("ui-bg_glass_55_fbf9ee_1x400.png");
                    public static readonly string ui_bg_glass_65_ffffff_1x400_png = Url("ui-bg_glass_65_ffffff_1x400.png");
                    public static readonly string ui_bg_glass_75_dadada_1x400_png = Url("ui-bg_glass_75_dadada_1x400.png");
                    public static readonly string ui_bg_glass_75_e6e6e6_1x400_png = Url("ui-bg_glass_75_e6e6e6_1x400.png");
                    public static readonly string ui_bg_glass_95_fef1ec_1x400_png = Url("ui-bg_glass_95_fef1ec_1x400.png");
                    public static readonly string ui_bg_highlight_soft_75_cccccc_1x100_png = Url("ui-bg_highlight-soft_75_cccccc_1x100.png");
                    public static readonly string ui_icons_222222_256x240_png = Url("ui-icons_222222_256x240.png");
                    public static readonly string ui_icons_2e83ff_256x240_png = Url("ui-icons_2e83ff_256x240.png");
                    public static readonly string ui_icons_454545_256x240_png = Url("ui-icons_454545_256x240.png");
                    public static readonly string ui_icons_888888_256x240_png = Url("ui-icons_888888_256x240.png");
                    public static readonly string ui_icons_cd0a0a_256x240_png = Url("ui-icons_cd0a0a_256x240.png");
                }
            
                public static readonly string jquery_ui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-ui.min.css") ? Url("jquery-ui.min.css") : Url("jquery-ui.css");
                        public static readonly string jquery_ui_accordion_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.accordion.min.css") ? Url("jquery.ui.accordion.min.css") : Url("jquery.ui.accordion.css");
                        public static readonly string jquery_ui_all_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.all.min.css") ? Url("jquery.ui.all.min.css") : Url("jquery.ui.all.css");
                        public static readonly string jquery_ui_autocomplete_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.autocomplete.min.css") ? Url("jquery.ui.autocomplete.min.css") : Url("jquery.ui.autocomplete.css");
                        public static readonly string jquery_ui_base_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.base.min.css") ? Url("jquery.ui.base.min.css") : Url("jquery.ui.base.css");
                        public static readonly string jquery_ui_button_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.button.min.css") ? Url("jquery.ui.button.min.css") : Url("jquery.ui.button.css");
                        public static readonly string jquery_ui_core_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.core.min.css") ? Url("jquery.ui.core.min.css") : Url("jquery.ui.core.css");
                        public static readonly string jquery_ui_datepicker_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.datepicker.min.css") ? Url("jquery.ui.datepicker.min.css") : Url("jquery.ui.datepicker.css");
                        public static readonly string jquery_ui_dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.dialog.min.css") ? Url("jquery.ui.dialog.min.css") : Url("jquery.ui.dialog.css");
                        public static readonly string jquery_ui_progressbar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.progressbar.min.css") ? Url("jquery.ui.progressbar.min.css") : Url("jquery.ui.progressbar.css");
                        public static readonly string jquery_ui_resizable_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.resizable.min.css") ? Url("jquery.ui.resizable.min.css") : Url("jquery.ui.resizable.css");
                        public static readonly string jquery_ui_selectable_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.selectable.min.css") ? Url("jquery.ui.selectable.min.css") : Url("jquery.ui.selectable.css");
                        public static readonly string jquery_ui_slider_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.slider.min.css") ? Url("jquery.ui.slider.min.css") : Url("jquery.ui.slider.css");
                        public static readonly string jquery_ui_tabs_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.tabs.min.css") ? Url("jquery.ui.tabs.min.css") : Url("jquery.ui.tabs.css");
                        public static readonly string jquery_ui_theme_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.theme.min.css") ? Url("jquery.ui.theme.min.css") : Url("jquery.ui.theme.css");
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class minified {
                    private const string URLPATH = "~/content/themes/base/minified";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/content/themes/base/minified/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string ui_bg_flat_0_aaaaaa_40x100_png = Url("ui-bg_flat_0_aaaaaa_40x100.png");
                        public static readonly string ui_bg_flat_75_ffffff_40x100_png = Url("ui-bg_flat_75_ffffff_40x100.png");
                        public static readonly string ui_bg_glass_55_fbf9ee_1x400_png = Url("ui-bg_glass_55_fbf9ee_1x400.png");
                        public static readonly string ui_bg_glass_65_ffffff_1x400_png = Url("ui-bg_glass_65_ffffff_1x400.png");
                        public static readonly string ui_bg_glass_75_dadada_1x400_png = Url("ui-bg_glass_75_dadada_1x400.png");
                        public static readonly string ui_bg_glass_75_e6e6e6_1x400_png = Url("ui-bg_glass_75_e6e6e6_1x400.png");
                        public static readonly string ui_bg_glass_95_fef1ec_1x400_png = Url("ui-bg_glass_95_fef1ec_1x400.png");
                        public static readonly string ui_bg_highlight_soft_75_cccccc_1x100_png = Url("ui-bg_highlight-soft_75_cccccc_1x100.png");
                        public static readonly string ui_icons_222222_256x240_png = Url("ui-icons_222222_256x240.png");
                        public static readonly string ui_icons_2e83ff_256x240_png = Url("ui-icons_2e83ff_256x240.png");
                        public static readonly string ui_icons_454545_256x240_png = Url("ui-icons_454545_256x240.png");
                        public static readonly string ui_icons_888888_256x240_png = Url("ui-icons_888888_256x240.png");
                        public static readonly string ui_icons_cd0a0a_256x240_png = Url("ui-icons_cd0a0a_256x240.png");
                    }
                
                    public static readonly string jquery_ui_min_css = Url("jquery-ui.min.css");
                    public static readonly string jquery_ui_accordion_min_css = Url("jquery.ui.accordion.min.css");
                    public static readonly string jquery_ui_all_min_css = Url("jquery.ui.all.min.css");
                    public static readonly string jquery_ui_autocomplete_min_css = Url("jquery.ui.autocomplete.min.css");
                    public static readonly string jquery_ui_base_min_css = Url("jquery.ui.base.min.css");
                    public static readonly string jquery_ui_button_min_css = Url("jquery.ui.button.min.css");
                    public static readonly string jquery_ui_core_min_css = Url("jquery.ui.core.min.css");
                    public static readonly string jquery_ui_datepicker_min_css = Url("jquery.ui.datepicker.min.css");
                    public static readonly string jquery_ui_dialog_min_css = Url("jquery.ui.dialog.min.css");
                    public static readonly string jquery_ui_progressbar_min_css = Url("jquery.ui.progressbar.min.css");
                    public static readonly string jquery_ui_resizable_min_css = Url("jquery.ui.resizable.min.css");
                    public static readonly string jquery_ui_selectable_min_css = Url("jquery.ui.selectable.min.css");
                    public static readonly string jquery_ui_slider_min_css = Url("jquery.ui.slider.min.css");
                    public static readonly string jquery_ui_tabs_min_css = Url("jquery.ui.tabs.min.css");
                    public static readonly string jquery_ui_theme_min_css = Url("jquery.ui.theme.min.css");
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class jquerybubblepopup_theme {
                private const string URLPATH = "~/content/themes/jquerybubblepopup-theme";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class all_azure {
                    private const string URLPATH = "~/content/themes/jquerybubblepopup-theme/all-azure";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string bottom_left_png = Url("bottom-left.png");
                    public static readonly string bottom_middle_png = Url("bottom-middle.png");
                    public static readonly string bottom_right_png = Url("bottom-right.png");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class ie {
                        private const string URLPATH = "~/content/themes/jquerybubblepopup-theme/all-azure/ie";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string bottom_left_gif = Url("bottom-left.gif");
                        public static readonly string bottom_middle_gif = Url("bottom-middle.gif");
                        public static readonly string bottom_right_gif = Url("bottom-right.gif");
                        public static readonly string middle_left_gif = Url("middle-left.gif");
                        public static readonly string middle_right_gif = Url("middle-right.gif");
                        public static readonly string tail_bottom_gif = Url("tail-bottom.gif");
                        public static readonly string tail_left_gif = Url("tail-left.gif");
                        public static readonly string tail_right_gif = Url("tail-right.gif");
                        public static readonly string tail_top_gif = Url("tail-top.gif");
                        public static readonly string top_left_gif = Url("top-left.gif");
                        public static readonly string top_middle_gif = Url("top-middle.gif");
                        public static readonly string top_right_gif = Url("top-right.gif");
                    }
                
                    public static readonly string middle_left_png = Url("middle-left.png");
                    public static readonly string middle_right_png = Url("middle-right.png");
                    public static readonly string tail_bottom_png = Url("tail-bottom.png");
                    public static readonly string tail_left_png = Url("tail-left.png");
                    public static readonly string tail_right_png = Url("tail-right.png");
                    public static readonly string tail_top_png = Url("tail-top.png");
                    public static readonly string top_left_png = Url("top-left.png");
                    public static readonly string top_middle_png = Url("top-middle.png");
                    public static readonly string top_right_png = Url("top-right.png");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class all_black {
                    private const string URLPATH = "~/content/themes/jquerybubblepopup-theme/all-black";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string bottom_left_png = Url("bottom-left.png");
                    public static readonly string bottom_middle_png = Url("bottom-middle.png");
                    public static readonly string bottom_right_png = Url("bottom-right.png");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class ie {
                        private const string URLPATH = "~/content/themes/jquerybubblepopup-theme/all-black/ie";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string bottom_left_gif = Url("bottom-left.gif");
                        public static readonly string bottom_middle_gif = Url("bottom-middle.gif");
                        public static readonly string bottom_right_gif = Url("bottom-right.gif");
                        public static readonly string middle_left_gif = Url("middle-left.gif");
                        public static readonly string middle_right_gif = Url("middle-right.gif");
                        public static readonly string tail_bottom_gif = Url("tail-bottom.gif");
                        public static readonly string tail_left_gif = Url("tail-left.gif");
                        public static readonly string tail_right_gif = Url("tail-right.gif");
                        public static readonly string tail_top_gif = Url("tail-top.gif");
                        public static readonly string top_left_gif = Url("top-left.gif");
                        public static readonly string top_middle_gif = Url("top-middle.gif");
                        public static readonly string top_right_gif = Url("top-right.gif");
                    }
                
                    public static readonly string middle_left_png = Url("middle-left.png");
                    public static readonly string middle_right_png = Url("middle-right.png");
                    public static readonly string tail_bottom_png = Url("tail-bottom.png");
                    public static readonly string tail_left_png = Url("tail-left.png");
                    public static readonly string tail_right_png = Url("tail-right.png");
                    public static readonly string tail_top_png = Url("tail-top.png");
                    public static readonly string top_left_png = Url("top-left.png");
                    public static readonly string top_middle_png = Url("top-middle.png");
                    public static readonly string top_right_png = Url("top-right.png");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class all_blue {
                    private const string URLPATH = "~/content/themes/jquerybubblepopup-theme/all-blue";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string bottom_left_png = Url("bottom-left.png");
                    public static readonly string bottom_middle_png = Url("bottom-middle.png");
                    public static readonly string bottom_right_png = Url("bottom-right.png");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class ie {
                        private const string URLPATH = "~/content/themes/jquerybubblepopup-theme/all-blue/ie";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string bottom_left_gif = Url("bottom-left.gif");
                        public static readonly string bottom_middle_gif = Url("bottom-middle.gif");
                        public static readonly string bottom_right_gif = Url("bottom-right.gif");
                        public static readonly string middle_left_gif = Url("middle-left.gif");
                        public static readonly string middle_right_gif = Url("middle-right.gif");
                        public static readonly string tail_bottom_gif = Url("tail-bottom.gif");
                        public static readonly string tail_left_gif = Url("tail-left.gif");
                        public static readonly string tail_right_gif = Url("tail-right.gif");
                        public static readonly string tail_top_gif = Url("tail-top.gif");
                        public static readonly string top_left_gif = Url("top-left.gif");
                        public static readonly string top_middle_gif = Url("top-middle.gif");
                        public static readonly string top_right_gif = Url("top-right.gif");
                    }
                
                    public static readonly string middle_left_png = Url("middle-left.png");
                    public static readonly string middle_right_png = Url("middle-right.png");
                    public static readonly string tail_bottom_png = Url("tail-bottom.png");
                    public static readonly string tail_left_png = Url("tail-left.png");
                    public static readonly string tail_right_png = Url("tail-right.png");
                    public static readonly string tail_top_png = Url("tail-top.png");
                    public static readonly string top_left_png = Url("top-left.png");
                    public static readonly string top_middle_png = Url("top-middle.png");
                    public static readonly string top_right_png = Url("top-right.png");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class all_green {
                    private const string URLPATH = "~/content/themes/jquerybubblepopup-theme/all-green";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string bottom_left_png = Url("bottom-left.png");
                    public static readonly string bottom_middle_png = Url("bottom-middle.png");
                    public static readonly string bottom_right_png = Url("bottom-right.png");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class ie {
                        private const string URLPATH = "~/content/themes/jquerybubblepopup-theme/all-green/ie";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string bottom_left_gif = Url("bottom-left.gif");
                        public static readonly string bottom_middle_gif = Url("bottom-middle.gif");
                        public static readonly string bottom_right_gif = Url("bottom-right.gif");
                        public static readonly string middle_left_gif = Url("middle-left.gif");
                        public static readonly string middle_right_gif = Url("middle-right.gif");
                        public static readonly string tail_bottom_gif = Url("tail-bottom.gif");
                        public static readonly string tail_left_gif = Url("tail-left.gif");
                        public static readonly string tail_right_gif = Url("tail-right.gif");
                        public static readonly string tail_top_gif = Url("tail-top.gif");
                        public static readonly string top_left_gif = Url("top-left.gif");
                        public static readonly string top_middle_gif = Url("top-middle.gif");
                        public static readonly string top_right_gif = Url("top-right.gif");
                    }
                
                    public static readonly string middle_left_png = Url("middle-left.png");
                    public static readonly string middle_right_png = Url("middle-right.png");
                    public static readonly string tail_bottom_png = Url("tail-bottom.png");
                    public static readonly string tail_left_png = Url("tail-left.png");
                    public static readonly string tail_right_png = Url("tail-right.png");
                    public static readonly string tail_top_png = Url("tail-top.png");
                    public static readonly string top_left_png = Url("top-left.png");
                    public static readonly string top_middle_png = Url("top-middle.png");
                    public static readonly string top_right_png = Url("top-right.png");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class all_grey {
                    private const string URLPATH = "~/content/themes/jquerybubblepopup-theme/all-grey";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string bottom_left_png = Url("bottom-left.png");
                    public static readonly string bottom_middle_png = Url("bottom-middle.png");
                    public static readonly string bottom_right_png = Url("bottom-right.png");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class ie {
                        private const string URLPATH = "~/content/themes/jquerybubblepopup-theme/all-grey/ie";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string bottom_left_gif = Url("bottom-left.gif");
                        public static readonly string bottom_middle_gif = Url("bottom-middle.gif");
                        public static readonly string bottom_right_gif = Url("bottom-right.gif");
                        public static readonly string middle_left_gif = Url("middle-left.gif");
                        public static readonly string middle_right_gif = Url("middle-right.gif");
                        public static readonly string tail_bottom_gif = Url("tail-bottom.gif");
                        public static readonly string tail_left_gif = Url("tail-left.gif");
                        public static readonly string tail_right_gif = Url("tail-right.gif");
                        public static readonly string tail_top_gif = Url("tail-top.gif");
                        public static readonly string top_left_gif = Url("top-left.gif");
                        public static readonly string top_middle_gif = Url("top-middle.gif");
                        public static readonly string top_right_gif = Url("top-right.gif");
                    }
                
                    public static readonly string middle_left_png = Url("middle-left.png");
                    public static readonly string middle_right_png = Url("middle-right.png");
                    public static readonly string tail_bottom_png = Url("tail-bottom.png");
                    public static readonly string tail_left_png = Url("tail-left.png");
                    public static readonly string tail_right_png = Url("tail-right.png");
                    public static readonly string tail_top_png = Url("tail-top.png");
                    public static readonly string top_left_png = Url("top-left.png");
                    public static readonly string top_middle_png = Url("top-middle.png");
                    public static readonly string top_right_png = Url("top-right.png");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class all_orange {
                    private const string URLPATH = "~/content/themes/jquerybubblepopup-theme/all-orange";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string bottom_left_png = Url("bottom-left.png");
                    public static readonly string bottom_middle_png = Url("bottom-middle.png");
                    public static readonly string bottom_right_png = Url("bottom-right.png");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class ie {
                        private const string URLPATH = "~/content/themes/jquerybubblepopup-theme/all-orange/ie";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string bottom_left_gif = Url("bottom-left.gif");
                        public static readonly string bottom_middle_gif = Url("bottom-middle.gif");
                        public static readonly string bottom_right_gif = Url("bottom-right.gif");
                        public static readonly string middle_left_gif = Url("middle-left.gif");
                        public static readonly string middle_right_gif = Url("middle-right.gif");
                        public static readonly string tail_bottom_gif = Url("tail-bottom.gif");
                        public static readonly string tail_left_gif = Url("tail-left.gif");
                        public static readonly string tail_right_gif = Url("tail-right.gif");
                        public static readonly string tail_top_gif = Url("tail-top.gif");
                        public static readonly string top_left_gif = Url("top-left.gif");
                        public static readonly string top_middle_gif = Url("top-middle.gif");
                        public static readonly string top_right_gif = Url("top-right.gif");
                    }
                
                    public static readonly string middle_left_png = Url("middle-left.png");
                    public static readonly string middle_right_png = Url("middle-right.png");
                    public static readonly string tail_bottom_png = Url("tail-bottom.png");
                    public static readonly string tail_left_png = Url("tail-left.png");
                    public static readonly string tail_right_png = Url("tail-right.png");
                    public static readonly string tail_top_png = Url("tail-top.png");
                    public static readonly string top_left_png = Url("top-left.png");
                    public static readonly string top_middle_png = Url("top-middle.png");
                    public static readonly string top_right_png = Url("top-right.png");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class all_violet {
                    private const string URLPATH = "~/content/themes/jquerybubblepopup-theme/all-violet";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string bottom_left_png = Url("bottom-left.png");
                    public static readonly string bottom_middle_png = Url("bottom-middle.png");
                    public static readonly string bottom_right_png = Url("bottom-right.png");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class ie {
                        private const string URLPATH = "~/content/themes/jquerybubblepopup-theme/all-violet/ie";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string bottom_left_gif = Url("bottom-left.gif");
                        public static readonly string bottom_middle_gif = Url("bottom-middle.gif");
                        public static readonly string bottom_right_gif = Url("bottom-right.gif");
                        public static readonly string middle_left_gif = Url("middle-left.gif");
                        public static readonly string middle_right_gif = Url("middle-right.gif");
                        public static readonly string tail_bottom_gif = Url("tail-bottom.gif");
                        public static readonly string tail_left_gif = Url("tail-left.gif");
                        public static readonly string tail_right_gif = Url("tail-right.gif");
                        public static readonly string tail_top_gif = Url("tail-top.gif");
                        public static readonly string top_left_gif = Url("top-left.gif");
                        public static readonly string top_middle_gif = Url("top-middle.gif");
                        public static readonly string top_right_gif = Url("top-right.gif");
                    }
                
                    public static readonly string middle_left_png = Url("middle-left.png");
                    public static readonly string middle_right_png = Url("middle-right.png");
                    public static readonly string tail_bottom_png = Url("tail-bottom.png");
                    public static readonly string tail_left_png = Url("tail-left.png");
                    public static readonly string tail_right_png = Url("tail-right.png");
                    public static readonly string tail_top_png = Url("tail-top.png");
                    public static readonly string top_left_png = Url("top-left.png");
                    public static readonly string top_middle_png = Url("top-middle.png");
                    public static readonly string top_right_png = Url("top-right.png");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class all_yellow {
                    private const string URLPATH = "~/content/themes/jquerybubblepopup-theme/all-yellow";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string bottom_left_png = Url("bottom-left.png");
                    public static readonly string bottom_middle_png = Url("bottom-middle.png");
                    public static readonly string bottom_right_png = Url("bottom-right.png");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class ie {
                        private const string URLPATH = "~/content/themes/jquerybubblepopup-theme/all-yellow/ie";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string bottom_left_gif = Url("bottom-left.gif");
                        public static readonly string bottom_middle_gif = Url("bottom-middle.gif");
                        public static readonly string bottom_right_gif = Url("bottom-right.gif");
                        public static readonly string middle_left_gif = Url("middle-left.gif");
                        public static readonly string middle_right_gif = Url("middle-right.gif");
                        public static readonly string tail_bottom_gif = Url("tail-bottom.gif");
                        public static readonly string tail_left_gif = Url("tail-left.gif");
                        public static readonly string tail_right_gif = Url("tail-right.gif");
                        public static readonly string tail_top_gif = Url("tail-top.gif");
                        public static readonly string top_left_gif = Url("top-left.gif");
                        public static readonly string top_middle_gif = Url("top-middle.gif");
                        public static readonly string top_right_gif = Url("top-right.gif");
                    }
                
                    public static readonly string middle_left_png = Url("middle-left.png");
                    public static readonly string middle_right_png = Url("middle-right.png");
                    public static readonly string tail_bottom_png = Url("tail-bottom.png");
                    public static readonly string tail_left_png = Url("tail-left.png");
                    public static readonly string tail_right_png = Url("tail-right.png");
                    public static readonly string tail_top_png = Url("tail-top.png");
                    public static readonly string top_left_png = Url("top-left.png");
                    public static readonly string top_middle_png = Url("top-middle.png");
                    public static readonly string top_right_png = Url("top-right.png");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class azure {
                    private const string URLPATH = "~/content/themes/jquerybubblepopup-theme/azure";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string bottom_left_png = Url("bottom-left.png");
                    public static readonly string bottom_middle_png = Url("bottom-middle.png");
                    public static readonly string bottom_right_png = Url("bottom-right.png");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class ie {
                        private const string URLPATH = "~/content/themes/jquerybubblepopup-theme/azure/ie";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string bottom_left_gif = Url("bottom-left.gif");
                        public static readonly string bottom_middle_gif = Url("bottom-middle.gif");
                        public static readonly string bottom_right_gif = Url("bottom-right.gif");
                        public static readonly string middle_left_gif = Url("middle-left.gif");
                        public static readonly string middle_right_gif = Url("middle-right.gif");
                        public static readonly string tail_bottom_gif = Url("tail-bottom.gif");
                        public static readonly string tail_left_gif = Url("tail-left.gif");
                        public static readonly string tail_right_gif = Url("tail-right.gif");
                        public static readonly string tail_top_gif = Url("tail-top.gif");
                        public static readonly string top_left_gif = Url("top-left.gif");
                        public static readonly string top_middle_gif = Url("top-middle.gif");
                        public static readonly string top_right_gif = Url("top-right.gif");
                    }
                
                    public static readonly string middle_left_png = Url("middle-left.png");
                    public static readonly string middle_right_png = Url("middle-right.png");
                    public static readonly string tail_bottom_png = Url("tail-bottom.png");
                    public static readonly string tail_left_png = Url("tail-left.png");
                    public static readonly string tail_right_png = Url("tail-right.png");
                    public static readonly string tail_top_png = Url("tail-top.png");
                    public static readonly string top_left_png = Url("top-left.png");
                    public static readonly string top_middle_png = Url("top-middle.png");
                    public static readonly string top_right_png = Url("top-right.png");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class black {
                    private const string URLPATH = "~/content/themes/jquerybubblepopup-theme/black";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string bottom_left_png = Url("bottom-left.png");
                    public static readonly string bottom_middle_png = Url("bottom-middle.png");
                    public static readonly string bottom_right_png = Url("bottom-right.png");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class ie {
                        private const string URLPATH = "~/content/themes/jquerybubblepopup-theme/black/ie";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string bottom_left_gif = Url("bottom-left.gif");
                        public static readonly string bottom_middle_gif = Url("bottom-middle.gif");
                        public static readonly string bottom_right_gif = Url("bottom-right.gif");
                        public static readonly string middle_left_gif = Url("middle-left.gif");
                        public static readonly string middle_right_gif = Url("middle-right.gif");
                        public static readonly string tail_bottom_gif = Url("tail-bottom.gif");
                        public static readonly string tail_left_gif = Url("tail-left.gif");
                        public static readonly string tail_right_gif = Url("tail-right.gif");
                        public static readonly string tail_top_gif = Url("tail-top.gif");
                        public static readonly string top_left_gif = Url("top-left.gif");
                        public static readonly string top_middle_gif = Url("top-middle.gif");
                        public static readonly string top_right_gif = Url("top-right.gif");
                    }
                
                    public static readonly string middle_left_png = Url("middle-left.png");
                    public static readonly string middle_right_png = Url("middle-right.png");
                    public static readonly string tail_bottom_png = Url("tail-bottom.png");
                    public static readonly string tail_left_png = Url("tail-left.png");
                    public static readonly string tail_right_png = Url("tail-right.png");
                    public static readonly string tail_top_png = Url("tail-top.png");
                    public static readonly string top_left_png = Url("top-left.png");
                    public static readonly string top_middle_png = Url("top-middle.png");
                    public static readonly string top_right_png = Url("top-right.png");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class blue {
                    private const string URLPATH = "~/content/themes/jquerybubblepopup-theme/blue";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string bottom_left_png = Url("bottom-left.png");
                    public static readonly string bottom_middle_png = Url("bottom-middle.png");
                    public static readonly string bottom_right_png = Url("bottom-right.png");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class ie {
                        private const string URLPATH = "~/content/themes/jquerybubblepopup-theme/blue/ie";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string bottom_left_gif = Url("bottom-left.gif");
                        public static readonly string bottom_middle_gif = Url("bottom-middle.gif");
                        public static readonly string bottom_right_gif = Url("bottom-right.gif");
                        public static readonly string middle_left_gif = Url("middle-left.gif");
                        public static readonly string middle_right_gif = Url("middle-right.gif");
                        public static readonly string tail_bottom_gif = Url("tail-bottom.gif");
                        public static readonly string tail_left_gif = Url("tail-left.gif");
                        public static readonly string tail_right_gif = Url("tail-right.gif");
                        public static readonly string tail_top_gif = Url("tail-top.gif");
                        public static readonly string top_left_gif = Url("top-left.gif");
                        public static readonly string top_middle_gif = Url("top-middle.gif");
                        public static readonly string top_right_gif = Url("top-right.gif");
                    }
                
                    public static readonly string middle_left_png = Url("middle-left.png");
                    public static readonly string middle_right_png = Url("middle-right.png");
                    public static readonly string tail_bottom_png = Url("tail-bottom.png");
                    public static readonly string tail_left_png = Url("tail-left.png");
                    public static readonly string tail_right_png = Url("tail-right.png");
                    public static readonly string tail_top_png = Url("tail-top.png");
                    public static readonly string top_left_png = Url("top-left.png");
                    public static readonly string top_middle_png = Url("top-middle.png");
                    public static readonly string top_right_png = Url("top-right.png");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class green {
                    private const string URLPATH = "~/content/themes/jquerybubblepopup-theme/green";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string bottom_left_png = Url("bottom-left.png");
                    public static readonly string bottom_middle_png = Url("bottom-middle.png");
                    public static readonly string bottom_right_png = Url("bottom-right.png");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class ie {
                        private const string URLPATH = "~/content/themes/jquerybubblepopup-theme/green/ie";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string bottom_left_gif = Url("bottom-left.gif");
                        public static readonly string bottom_middle_gif = Url("bottom-middle.gif");
                        public static readonly string bottom_right_gif = Url("bottom-right.gif");
                        public static readonly string middle_left_gif = Url("middle-left.gif");
                        public static readonly string middle_right_gif = Url("middle-right.gif");
                        public static readonly string tail_bottom_gif = Url("tail-bottom.gif");
                        public static readonly string tail_left_gif = Url("tail-left.gif");
                        public static readonly string tail_right_gif = Url("tail-right.gif");
                        public static readonly string tail_top_gif = Url("tail-top.gif");
                        public static readonly string top_left_gif = Url("top-left.gif");
                        public static readonly string top_middle_gif = Url("top-middle.gif");
                        public static readonly string top_right_gif = Url("top-right.gif");
                    }
                
                    public static readonly string middle_left_png = Url("middle-left.png");
                    public static readonly string middle_right_png = Url("middle-right.png");
                    public static readonly string tail_bottom_png = Url("tail-bottom.png");
                    public static readonly string tail_left_png = Url("tail-left.png");
                    public static readonly string tail_right_png = Url("tail-right.png");
                    public static readonly string tail_top_png = Url("tail-top.png");
                    public static readonly string top_left_png = Url("top-left.png");
                    public static readonly string top_middle_png = Url("top-middle.png");
                    public static readonly string top_right_png = Url("top-right.png");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class grey {
                    private const string URLPATH = "~/content/themes/jquerybubblepopup-theme/grey";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string bottom_left_png = Url("bottom-left.png");
                    public static readonly string bottom_middle_png = Url("bottom-middle.png");
                    public static readonly string bottom_right_png = Url("bottom-right.png");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class ie {
                        private const string URLPATH = "~/content/themes/jquerybubblepopup-theme/grey/ie";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string bottom_left_gif = Url("bottom-left.gif");
                        public static readonly string bottom_middle_gif = Url("bottom-middle.gif");
                        public static readonly string bottom_right_gif = Url("bottom-right.gif");
                        public static readonly string middle_left_gif = Url("middle-left.gif");
                        public static readonly string middle_right_gif = Url("middle-right.gif");
                        public static readonly string tail_bottom_gif = Url("tail-bottom.gif");
                        public static readonly string tail_left_gif = Url("tail-left.gif");
                        public static readonly string tail_right_gif = Url("tail-right.gif");
                        public static readonly string tail_top_gif = Url("tail-top.gif");
                        public static readonly string top_left_gif = Url("top-left.gif");
                        public static readonly string top_middle_gif = Url("top-middle.gif");
                        public static readonly string top_right_gif = Url("top-right.gif");
                    }
                
                    public static readonly string middle_left_png = Url("middle-left.png");
                    public static readonly string middle_right_png = Url("middle-right.png");
                    public static readonly string tail_bottom_png = Url("tail-bottom.png");
                    public static readonly string tail_left_png = Url("tail-left.png");
                    public static readonly string tail_right_png = Url("tail-right.png");
                    public static readonly string tail_top_png = Url("tail-top.png");
                    public static readonly string top_left_png = Url("top-left.png");
                    public static readonly string top_middle_png = Url("top-middle.png");
                    public static readonly string top_right_png = Url("top-right.png");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class orange {
                    private const string URLPATH = "~/content/themes/jquerybubblepopup-theme/orange";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string bottom_left_png = Url("bottom-left.png");
                    public static readonly string bottom_middle_png = Url("bottom-middle.png");
                    public static readonly string bottom_right_png = Url("bottom-right.png");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class ie {
                        private const string URLPATH = "~/content/themes/jquerybubblepopup-theme/orange/ie";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string bottom_left_gif = Url("bottom-left.gif");
                        public static readonly string bottom_middle_gif = Url("bottom-middle.gif");
                        public static readonly string bottom_right_gif = Url("bottom-right.gif");
                        public static readonly string middle_left_gif = Url("middle-left.gif");
                        public static readonly string middle_right_gif = Url("middle-right.gif");
                        public static readonly string tail_bottom_gif = Url("tail-bottom.gif");
                        public static readonly string tail_left_gif = Url("tail-left.gif");
                        public static readonly string tail_right_gif = Url("tail-right.gif");
                        public static readonly string tail_top_gif = Url("tail-top.gif");
                        public static readonly string top_left_gif = Url("top-left.gif");
                        public static readonly string top_middle_gif = Url("top-middle.gif");
                        public static readonly string top_right_gif = Url("top-right.gif");
                    }
                
                    public static readonly string middle_left_png = Url("middle-left.png");
                    public static readonly string middle_right_png = Url("middle-right.png");
                    public static readonly string tail_bottom_png = Url("tail-bottom.png");
                    public static readonly string tail_left_png = Url("tail-left.png");
                    public static readonly string tail_right_png = Url("tail-right.png");
                    public static readonly string tail_top_png = Url("tail-top.png");
                    public static readonly string top_left_png = Url("top-left.png");
                    public static readonly string top_middle_png = Url("top-middle.png");
                    public static readonly string top_right_png = Url("top-right.png");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class violet {
                    private const string URLPATH = "~/content/themes/jquerybubblepopup-theme/violet";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string bottom_left_png = Url("bottom-left.png");
                    public static readonly string bottom_middle_png = Url("bottom-middle.png");
                    public static readonly string bottom_right_png = Url("bottom-right.png");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class ie {
                        private const string URLPATH = "~/content/themes/jquerybubblepopup-theme/violet/ie";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string bottom_left_gif = Url("bottom-left.gif");
                        public static readonly string bottom_middle_gif = Url("bottom-middle.gif");
                        public static readonly string bottom_right_gif = Url("bottom-right.gif");
                        public static readonly string middle_left_gif = Url("middle-left.gif");
                        public static readonly string middle_right_gif = Url("middle-right.gif");
                        public static readonly string tail_bottom_gif = Url("tail-bottom.gif");
                        public static readonly string tail_left_gif = Url("tail-left.gif");
                        public static readonly string tail_right_gif = Url("tail-right.gif");
                        public static readonly string tail_top_gif = Url("tail-top.gif");
                        public static readonly string top_left_gif = Url("top-left.gif");
                        public static readonly string top_middle_gif = Url("top-middle.gif");
                        public static readonly string top_right_gif = Url("top-right.gif");
                    }
                
                    public static readonly string middle_left_png = Url("middle-left.png");
                    public static readonly string middle_right_png = Url("middle-right.png");
                    public static readonly string tail_bottom_png = Url("tail-bottom.png");
                    public static readonly string tail_left_png = Url("tail-left.png");
                    public static readonly string tail_right_png = Url("tail-right.png");
                    public static readonly string tail_top_png = Url("tail-top.png");
                    public static readonly string top_left_png = Url("top-left.png");
                    public static readonly string top_middle_png = Url("top-middle.png");
                    public static readonly string top_right_png = Url("top-right.png");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class yellow {
                    private const string URLPATH = "~/content/themes/jquerybubblepopup-theme/yellow";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string bottom_left_png = Url("bottom-left.png");
                    public static readonly string bottom_middle_png = Url("bottom-middle.png");
                    public static readonly string bottom_right_png = Url("bottom-right.png");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class ie {
                        private const string URLPATH = "~/content/themes/jquerybubblepopup-theme/yellow/ie";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string bottom_left_gif = Url("bottom-left.gif");
                        public static readonly string bottom_middle_gif = Url("bottom-middle.gif");
                        public static readonly string bottom_right_gif = Url("bottom-right.gif");
                        public static readonly string middle_left_gif = Url("middle-left.gif");
                        public static readonly string middle_right_gif = Url("middle-right.gif");
                        public static readonly string tail_bottom_gif = Url("tail-bottom.gif");
                        public static readonly string tail_left_gif = Url("tail-left.gif");
                        public static readonly string tail_right_gif = Url("tail-right.gif");
                        public static readonly string tail_top_gif = Url("tail-top.gif");
                        public static readonly string top_left_gif = Url("top-left.gif");
                        public static readonly string top_middle_gif = Url("top-middle.gif");
                        public static readonly string top_right_gif = Url("top-right.gif");
                    }
                
                    public static readonly string middle_left_png = Url("middle-left.png");
                    public static readonly string middle_right_png = Url("middle-right.png");
                    public static readonly string tail_bottom_png = Url("tail-bottom.png");
                    public static readonly string tail_left_png = Url("tail-left.png");
                    public static readonly string tail_right_png = Url("tail-right.png");
                    public static readonly string tail_top_png = Url("tail-top.png");
                    public static readonly string top_left_png = Url("top-left.png");
                    public static readonly string top_middle_png = Url("top-middle.png");
                    public static readonly string top_right_png = Url("top-right.png");
                }
            
            }
        
        }
    
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Models {
        private const string URLPATH = "~/Models";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string LayoutScroll_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/LayoutScroll.min.js") ? Url("LayoutScroll.min.js") : Url("LayoutScroll.js");
                public static readonly string PageOfResults_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/PageOfResults.min.js") ? Url("PageOfResults.min.js") : Url("PageOfResults.js");
                }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Areas {
        private const string URLPATH = "~/Areas";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Activities {
            private const string URLPATH = "~/Areas/Activities";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Controllers {
                private const string URLPATH = "~/Areas/Activities/Controllers";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Models {
                private const string URLPATH = "~/Areas/Activities/Models";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Views {
                private const string URLPATH = "~/Areas/Activities/Views";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string _ViewStart_cshtml = Url("_ViewStart.cshtml");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Shared {
                    private const string URLPATH = "~/Areas/Activities/Views/Shared";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string _activity_info_cshtml = Url("_activity-info.cshtml");
                    public static readonly string _short_list_cshtml = Url("_short-list.cshtml");
                    public static readonly string _tag_list_cshtml = Url("_tag-list.cshtml");
                    public static readonly string _tag_menu_cshtml = Url("_tag-menu.cshtml");
                    public static readonly string activities_page_cshtml = Url("activities-page.cshtml");
                    public static readonly string activity_delete_cshtml = Url("activity-delete.cshtml");
                    public static readonly string activity_form_cshtml = Url("activity-form.cshtml");
                    public static readonly string activity_info_cshtml = Url("activity-info.cshtml");
                    public static readonly string activity_results_cshtml = Url("activity-results.cshtml");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class EditorTemplates {
                        private const string URLPATH = "~/Areas/Activities/Views/Shared/EditorTemplates";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string Tag_cshtml = Url("Tag.cshtml");
                        public static readonly string TinyMceContent_cshtml = Url("TinyMceContent.cshtml");
                    }
                
                }
            
                public static readonly string Web_config = Url("Web.config");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Common {
            private const string URLPATH = "~/Areas/Common";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Controllers {
                private const string URLPATH = "~/Areas/Common/Controllers";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Models {
                private const string URLPATH = "~/Areas/Common/Models";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Features {
                    private const string URLPATH = "~/Areas/Common/Models/Features";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Navigation {
                    private const string URLPATH = "~/Areas/Common/Models/Navigation";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Skins {
                    private const string URLPATH = "~/Areas/Common/Models/Skins";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Views {
                private const string URLPATH = "~/Areas/Common/Views";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string _ViewStart_cshtml = Url("_ViewStart.cshtml");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Errors {
                    private const string URLPATH = "~/Areas/Common/Views/Errors";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string bad_request_cshtml = Url("bad-request.cshtml");
                    public static readonly string file_upload_too_large_cshtml = Url("file-upload-too-large.cshtml");
                    public static readonly string not_authorized_cshtml = Url("not-authorized.cshtml");
                    public static readonly string not_found_cshtml = Url("not-found.cshtml");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Features {
                    private const string URLPATH = "~/Areas/Common/Views/Features";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string alumni_module_cshtml = Url("alumni-module.cshtml");
                    public static readonly string corporate_engagement_module_cshtml = Url("corporate-engagement-module.cshtml");
                    public static readonly string december_2011_preview_1_cshtml = Url("december-2011-preview-1.cshtml");
                    public static readonly string december_2011_preview_2_cshtml = Url("december-2011-preview-2.cshtml");
                    public static readonly string faculty_staff_module_cshtml = Url("faculty-staff-module.cshtml");
                    public static readonly string february_2012_preview_1_cshtml = Url("february-2012-preview-1.cshtml");
                    public static readonly string february_2012_preview_2_cshtml = Url("february-2012-preview-2.cshtml");
                    public static readonly string gherkin_cshtml = Url("gherkin.cshtml");
                    public static readonly string global_press_module_cshtml = Url("global-press-module.cshtml");
                    public static readonly string july_2012_preview_1_cshtml = Url("july-2012-preview-1.cshtml");
                    public static readonly string june_2012_preview_1_cshtml = Url("june-2012-preview-1.cshtml");
                    public static readonly string june_2012_preview_2_cshtml = Url("june-2012-preview-2.cshtml");
                    public static readonly string preview_1_cshtml = Url("preview-1.cshtml");
                    public static readonly string preview_2_cshtml = Url("preview-2.cshtml");
                    public static readonly string preview_3_cshtml = Url("preview-3.cshtml");
                    public static readonly string preview_4_cshtml = Url("preview-4.cshtml");
                    public static readonly string releases_css_cshtml = Url("releases-css.cshtml");
                    public static readonly string releases_nav_cshtml = Url("releases-nav.cshtml");
                    public static readonly string releases_cshtml = Url("releases.cshtml");
                    public static readonly string representatives_module_cshtml = Url("representatives-module.cshtml");
                    public static readonly string requirements_css_cshtml = Url("requirements-css.cshtml");
                    public static readonly string requirements_cshtml = Url("requirements.cshtml");
                    public static readonly string students_module_cshtml = Url("students-module.cshtml");
                    public static readonly string travel_module_cshtml = Url("travel-module.cshtml");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Health {
                    private const string URLPATH = "~/Areas/Common/Views/Health";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string run_db_seeder_cshtml = Url("run-db-seeder.cshtml");
                    public static readonly string run_establishment_hierarchy_cshtml = Url("run-establishment-hierarchy.cshtml");
                    public static readonly string run_establishment_import_cshtml = Url("run-establishment-import.cshtml");
                    public static readonly string run_imager_cshtml = Url("run-imager.cshtml");
                    public static readonly string run_institutional_agreement_hierarchy_cshtml = Url("run-institutional-agreement-hierarchy.cshtml");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Navigation {
                    private const string URLPATH = "~/Areas/Common/Views/Navigation";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string consortium_footer_cshtml = Url("consortium-footer.cshtml");
                    public static readonly string horizontal_tabs_cshtml = Url("horizontal-tabs.cshtml");
                    public static readonly string not_implemented_dialog_cshtml = Url("not-implemented-dialog.cshtml");
                    public static readonly string top_tabs_cshtml = Url("top-tabs.cshtml");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Qa {
                    private const string URLPATH = "~/Areas/Common/Views/Qa";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string mail_files_names_cshtml = Url("mail-files-names.cshtml");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Skins {
                    private const string URLPATH = "~/Areas/Common/Views/Skins";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string apply_cshtml = Url("apply.cshtml");
                    public static readonly string logo_cshtml = Url("logo.cshtml");
                    public static readonly string sample_nav_cshtml = Url("sample-nav.cshtml");
                    public static readonly string sample_right_column_a_cshtml = Url("sample-right-column-a.cshtml");
                    public static readonly string sample_cshtml = Url("sample.cshtml");
                }
            
                public static readonly string Web_config = Url("Web.config");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Establishments {
            private const string URLPATH = "~/Areas/Establishments";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Controllers {
                private const string URLPATH = "~/Areas/Establishments/Controllers";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Models {
                private const string URLPATH = "~/Areas/Establishments/Models";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class ManagementForms {
                    private const string URLPATH = "~/Areas/Establishments/Models/ManagementForms";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Views {
                private const string URLPATH = "~/Areas/Establishments/Views";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string _ViewStart_cshtml = Url("_ViewStart.cshtml");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class ManagementForms {
                    private const string URLPATH = "~/Areas/Establishments/Views/ManagementForms";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string add_cshtml = Url("add.cshtml");
                    public static readonly string browse_cshtml = Url("browse.cshtml");
                    public static readonly string edit_cshtml = Url("edit.cshtml");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class EditorTemplates {
                        private const string URLPATH = "~/Areas/Establishments/Views/ManagementForms/EditorTemplates";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string EstablishmentForm_cshtml = Url("EstablishmentForm.cshtml");
                        public static readonly string EstablishmentNameForm_cshtml = Url("EstablishmentNameForm.cshtml");
                    }
                
                    public static readonly string form_cshtml = Url("form.cshtml");
                    public static readonly string location_map_help_cshtml = Url("location-map-help.cshtml");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Shared {
                    private const string URLPATH = "~/Areas/Establishments/Views/Shared";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class EditorTemplates {
                        private const string URLPATH = "~/Areas/Establishments/Views/Shared/EditorTemplates";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string EstablishmentPlaceForm_cshtml = Url("EstablishmentPlaceForm.cshtml");
                        public static readonly string EstablishmentPlacesForm_cshtml = Url("EstablishmentPlacesForm.cshtml");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class SupplementalForms {
                    private const string URLPATH = "~/Areas/Establishments/Views/SupplementalForms";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string locate_cshtml = Url("locate.cshtml");
                }
            
                public static readonly string Web_config = Url("Web.config");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Identity {
            private const string URLPATH = "~/Areas/Identity";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Controllers {
                private const string URLPATH = "~/Areas/Identity/Controllers";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Models {
                private const string URLPATH = "~/Areas/Identity/Models";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Views {
                private const string URLPATH = "~/Areas/Identity/Views";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string _ViewStart_cshtml = Url("_ViewStart.cshtml");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class ConfirmEmail {
                    private const string URLPATH = "~/Areas/Identity/Views/ConfirmEmail";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string _denied_all_cshtml = Url("_denied-all.cshtml");
                    public static readonly string _denied_crash_cshtml = Url("_denied-crash.cshtml");
                    public static readonly string _form_instructions_cshtml = Url("_form-instructions.cshtml");
                    public static readonly string _form_legend_text_cshtml = Url("_form-legend-text.cshtml");
                    public static readonly string _right_cshtml = Url("_right.cshtml");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class CreatePassword {
                    private const string URLPATH = "~/Areas/Identity/Views/CreatePassword";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string _denied_crash_cshtml = Url("_denied-crash.cshtml");
                    public static readonly string _denied_expired_cshtml = Url("_denied-expired.cshtml");
                    public static readonly string _denied_retired_cshtml = Url("_denied-retired.cshtml");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class ResetPassword {
                    private const string URLPATH = "~/Areas/Identity/Views/ResetPassword";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string _denied_crash_cshtml = Url("_denied-crash.cshtml");
                    public static readonly string _denied_expired_cshtml = Url("_denied-expired.cshtml");
                    public static readonly string _denied_retired_cshtml = Url("_denied-retired.cshtml");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Shared {
                    private const string URLPATH = "~/Areas/Identity/Views/Shared";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string _layout_identity_nav_cshtml = Url("_layout-identity-nav.cshtml");
                    public static readonly string _layout_identity_v1_cshtml = Url("_layout_identity_v1.cshtml");
                    public static readonly string _sign_in_form_cshtml = Url("_sign-in-form.cshtml");
                    public static readonly string _sign_on_form_cshtml = Url("_sign-on-form.cshtml");
                    public static readonly string confirm_email_cshtml = Url("confirm-email.cshtml");
                    public static readonly string create_password_cshtml = Url("create-password.cshtml");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class DisplayTemplates {
                        private const string URLPATH = "~/Areas/Identity/Views/Shared/DisplayTemplates";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string EmailAddressField_cshtml = Url("EmailAddressField.cshtml");
                        public static readonly string MyAffiliation_cshtml = Url("MyAffiliation.cshtml");
                        public static readonly string MyEmailAddress_cshtml = Url("MyEmailAddress.cshtml");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class EditorTemplates {
                        private const string URLPATH = "~/Areas/Identity/Views/Shared/EditorTemplates";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string ConfirmEmailForm_cshtml = Url("ConfirmEmailForm.cshtml");
                        public static readonly string CreatePasswordForm_cshtml = Url("CreatePasswordForm.cshtml");
                        public static readonly string EmailAddressField_cshtml = Url("EmailAddressField.cshtml");
                        public static readonly string EmployeeOrStudentAffiliation_cshtml = Url("EmployeeOrStudentAffiliation.cshtml");
                        public static readonly string ForgotPasswordForm_cshtml = Url("ForgotPasswordForm.cshtml");
                        public static readonly string PasswordField_cshtml = Url("PasswordField.cshtml");
                        public static readonly string RememberMeField_cshtml = Url("RememberMeField.cshtml");
                        public static readonly string ResetPasswordForm_cshtml = Url("ResetPasswordForm.cshtml");
                        public static readonly string SignInForm_cshtml = Url("SignInForm.cshtml");
                        public static readonly string SignOnForm_cshtml = Url("SignOnForm.cshtml");
                        public static readonly string SignOverForm_cshtml = Url("SignOverForm.cshtml");
                        public static readonly string SignUpForm_cshtml = Url("SignUpForm.cshtml");
                        public static readonly string StrengthMeteredPassword_cshtml = Url("StrengthMeteredPassword.cshtml");
                        public static readonly string UpdateAffiliationForm_cshtml = Url("UpdateAffiliationForm.cshtml");
                        public static readonly string UpdateEmailValueForm_cshtml = Url("UpdateEmailValueForm.cshtml");
                        public static readonly string UpdateNameForm_cshtml = Url("UpdateNameForm.cshtml");
                        public static readonly string UpdatePasswordForm_cshtml = Url("UpdatePasswordForm.cshtml");
                    }
                
                    public static readonly string forgot_password_cshtml = Url("forgot-password.cshtml");
                    public static readonly string metadata_cshtml = Url("metadata.cshtml");
                    public static readonly string my_home_cshtml = Url("my-home.cshtml");
                    public static readonly string providers_cshtml = Url("providers.cshtml");
                    public static readonly string reset_password_cshtml = Url("reset-password.cshtml");
                    public static readonly string sign_in_cshtml = Url("sign-in.cshtml");
                    public static readonly string sign_on_cshtml = Url("sign-on.cshtml");
                    public static readonly string sign_out_cshtml = Url("sign-out.cshtml");
                    public static readonly string sign_over_cshtml = Url("sign-over.cshtml");
                    public static readonly string sign_up_cshtml = Url("sign-up.cshtml");
                    public static readonly string update_affiliation_cshtml = Url("update-affiliation.cshtml");
                    public static readonly string update_email_value_cshtml = Url("update-email-value.cshtml");
                    public static readonly string update_name_cshtml = Url("update-name.cshtml");
                    public static readonly string update_password_cshtml = Url("update-password.cshtml");
                }
            
                public static readonly string Web_config = Url("Web.config");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class InstitutionalAgreements {
            private const string URLPATH = "~/Areas/InstitutionalAgreements";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Controllers {
                private const string URLPATH = "~/Areas/InstitutionalAgreements/Controllers";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Models {
                private const string URLPATH = "~/Areas/InstitutionalAgreements/Models";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class ConfigurationForms {
                    private const string URLPATH = "~/Areas/InstitutionalAgreements/Models/ConfigurationForms";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class ManagementForms {
                    private const string URLPATH = "~/Areas/InstitutionalAgreements/Models/ManagementForms";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class PublicSearch {
                    private const string URLPATH = "~/Areas/InstitutionalAgreements/Models/PublicSearch";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Views {
                private const string URLPATH = "~/Areas/InstitutionalAgreements/Views";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string _ViewStart_cshtml = Url("_ViewStart.cshtml");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class ConfigurationForms {
                    private const string URLPATH = "~/Areas/InstitutionalAgreements/Views/ConfigurationForms";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string add_cshtml = Url("add.cshtml");
                    public static readonly string edit_cshtml = Url("edit.cshtml");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class EditorTemplates {
                        private const string URLPATH = "~/Areas/InstitutionalAgreements/Views/ConfigurationForms/EditorTemplates";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string InstitutionalAgreementConfigurationForm_cshtml = Url("InstitutionalAgreementConfigurationForm.cshtml");
                        public static readonly string InstitutionalAgreementContactTypeValueForm_cshtml = Url("InstitutionalAgreementContactTypeValueForm.cshtml");
                        public static readonly string InstitutionalAgreementStatusValueForm_cshtml = Url("InstitutionalAgreementStatusValueForm.cshtml");
                        public static readonly string InstitutionalAgreementTypeValueForm_cshtml = Url("InstitutionalAgreementTypeValueForm.cshtml");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class ManagementForms {
                    private const string URLPATH = "~/Areas/InstitutionalAgreements/Views/ManagementForms";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string _browse_by_map_cshtml = Url("_browse-by-map.cshtml");
                    public static readonly string _browse_cshtml = Url("_browse.cshtml");
                    public static readonly string add_contact_cshtml = Url("add-contact.cshtml");
                    public static readonly string browse_cshtml = Url("browse.cshtml");
                    public static readonly string edit_cshtml = Url("edit.cshtml");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class EditorTemplates {
                        private const string URLPATH = "~/Areas/InstitutionalAgreements/Views/ManagementForms/EditorTemplates";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string InstitutionalAgreementContactForm_cshtml = Url("InstitutionalAgreementContactForm.cshtml");
                        public static readonly string InstitutionalAgreementFileForm_cshtml = Url("InstitutionalAgreementFileForm.cshtml");
                        public static readonly string InstitutionalAgreementForm_cshtml = Url("InstitutionalAgreementForm.cshtml");
                        public static readonly string InstitutionalAgreementParticipantForm_cshtml = Url("InstitutionalAgreementParticipantForm.cshtml");
                    }
                
                    public static readonly string expires_on_help_cshtml = Url("expires-on-help.cshtml");
                    public static readonly string form_custom_css_cshtml = Url("form-custom-css.cshtml");
                    public static readonly string post_cshtml = Url("post.cshtml");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class PublicSearch {
                    private const string URLPATH = "~/Areas/InstitutionalAgreements/Views/PublicSearch";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string _no_context_cshtml = Url("_no-context.cshtml");
                    public static readonly string css_cshtml = Url("css.cshtml");
                    public static readonly string index_cshtml = Url("index.cshtml");
                    public static readonly string info_cshtml = Url("info.cshtml");
                    public static readonly string no_context_cshtml = Url("no-context.cshtml");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Shared {
                    private const string URLPATH = "~/Areas/InstitutionalAgreements/Views/Shared";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class EditorTemplates {
                        private const string URLPATH = "~/Areas/InstitutionalAgreements/Views/Shared/EditorTemplates";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string _ReadMe_txt = Url("_ReadMe.txt");
                        public static readonly string ContactTypeComboBox_cshtml = Url("ContactTypeComboBox.cshtml");
                        public static readonly string StatusComboBox_cshtml = Url("StatusComboBox.cshtml");
                        public static readonly string TypeComboBox_cshtml = Url("TypeComboBox.cshtml");
                    }
                
                }
            
                public static readonly string Web_config = Url("Web.config");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Languages {
            private const string URLPATH = "~/Areas/Languages";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Controllers {
                private const string URLPATH = "~/Areas/Languages/Controllers";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Models {
                private const string URLPATH = "~/Areas/Languages/Models";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string SearchResults_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/SearchResults.min.js") ? Url("SearchResults.min.js") : Url("SearchResults.js");
                        }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Views {
                private const string URLPATH = "~/Areas/Languages/Views";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string _ViewStart_cshtml = Url("_ViewStart.cshtml");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Shared {
                    private const string URLPATH = "~/Areas/Languages/Views/Shared";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class DisplayTemplates {
                        private const string URLPATH = "~/Areas/Languages/Views/Shared/DisplayTemplates";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string NameItem_cshtml = Url("NameItem.cshtml");
                    }
                
                    public static readonly string item_cshtml = Url("item.cshtml");
                    public static readonly string search_cshtml = Url("search.cshtml");
                }
            
                public static readonly string Web_config = Url("Web.config");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class People {
            private const string URLPATH = "~/Areas/People";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Controllers {
                private const string URLPATH = "~/Areas/People/Controllers";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Models {
                private const string URLPATH = "~/Areas/People/Models";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Views {
                private const string URLPATH = "~/Areas/People/Views";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string _ViewStart_cshtml = Url("_ViewStart.cshtml");
                public static readonly string Web_config = Url("Web.config");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Preferences {
            private const string URLPATH = "~/Areas/Preferences";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Controllers {
                private const string URLPATH = "~/Areas/Preferences/Controllers";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Models {
                private const string URLPATH = "~/Areas/Preferences/Models";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Views {
                private const string URLPATH = "~/Areas/Preferences/Views";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Shared {
                    private const string URLPATH = "~/Areas/Preferences/Views/Shared";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                }
            
                public static readonly string Web_config = Url("Web.config");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class RecruitmentAgencies {
            private const string URLPATH = "~/Areas/RecruitmentAgencies";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Controllers {
                private const string URLPATH = "~/Areas/RecruitmentAgencies/Controllers";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Models {
                private const string URLPATH = "~/Areas/RecruitmentAgencies/Models";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Views {
                private const string URLPATH = "~/Areas/RecruitmentAgencies/Views";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string _ViewStart_cshtml = Url("_ViewStart.cshtml");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Shared {
                    private const string URLPATH = "~/Areas/RecruitmentAgencies/Views/Shared";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                }
            
                public static readonly string Web_config = Url("Web.config");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Roles {
            private const string URLPATH = "~/Areas/Roles";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Controllers {
                private const string URLPATH = "~/Areas/Roles/Controllers";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Models {
                private const string URLPATH = "~/Areas/Roles/Models";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Views {
                private const string URLPATH = "~/Areas/Roles/Views";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string _ViewStart_cshtml = Url("_ViewStart.cshtml");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Roles {
                    private const string URLPATH = "~/Areas/Roles/Views/Roles";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string browse_cshtml = Url("browse.cshtml");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class EditorTemplates {
                        private const string URLPATH = "~/Areas/Roles/Views/Roles/EditorTemplates";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string RoleForm_cshtml = Url("RoleForm.cshtml");
                        public static readonly string RoleGrantForm_cshtml = Url("RoleGrantForm.cshtml");
                    }
                
                    public static readonly string form_cshtml = Url("form.cshtml");
                }
            
                public static readonly string Web_config = Url("Web.config");
            }
        
        }
    
    }

}

public static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);

        // Add your own modifications here before returning the path
        return path;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;


    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() {
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled);
    }
}





#endregion T4MVC
#pragma warning restore 1591




